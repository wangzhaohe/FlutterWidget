<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2"/>
<globals/>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="swot.20221017093031.1"><vh>widgets</vh>
<v t="swot.20221017093031.2" descendentVnodeUnknownAttributes="7d7100285805000000302e322e3171017d7102285808000000616e6e6f7461746571037d71042858080000007072696f7269747971054b01580a000000707269736574646174657106580a000000323032322d31302d3233710775580500000069636f6e7371085d71097d710a28580400000074797065710b580400000066696c65710c680c58320000002f55736572732f73776f742f6170702f6c656f2d656469746f722f6c656f2f49636f6e732f636c656f2f707269312e706e67710d580700000072656c50617468710e580d000000636c656f2f707269312e706e67710f580500000077686572657110580e0000006265666f7265486561646c696e6571115807000000796f666673657471124b005807000000786f666673657471134b0258040000007870616471144b0158020000006f6e71155805000000766e6f646571165808000000636c656f49636f6e71175801000000317118756175580d000000302e332e302e302e302e312e3171197d711a68037d711b2858080000007072696f72697479711c4d0f27580a00000070726973657464617465711d580a000000323032322d31302d3236711e75735811000000302e342e302e332e312e302e302e302e30711f7d712068037d71212858080000007072696f7269747971224d0f27580a000000707269736574646174657123580a000000323032322d31302d3235712475735813000000302e342e302e352e322e302e302e302e312e3071257d712668037d71272858080000007072696f7269747971284d0f27580a000000707269736574646174657129580a000000323032322d31302d3330712a75735817000000302e342e302e352e322e322e312e302e312e302e302e30712b7d712c68037d712d2858080000007072696f72697479712e4d0f27580a00000070726973657464617465712f580a000000323032322d31312d3132713075735817000000302e342e302e352e322e322e312e302e312e302e302e3171317d713268037d71332858080000007072696f7269747971344d0f27580a000000707269736574646174657135580a000000323032322d31312d313271367573580d000000302e342e312e322e312e302e3071377d713868037d71392858080000007072696f72697479713a4d0f27580a00000070726973657464617465713b580a000000323032322d31302d3233713c7573580f000000302e342e312e322e312e302e302e30713d7d713e68037d713f2858080000007072696f7269747971404d0f27580a000000707269736574646174657141580a000000323032322d31302d3233714275735815000000302e342e322e342e322e362e312e302e312e302e3071437d714468037d71452858080000007072696f7269747971464d0f27580a000000707269736574646174657147580a000000323032322d31312d3132714875735817000000302e342e322e342e322e362e312e302e312e302e302e3071497d714a68037d714b2858080000007072696f72697479714c4d0f27580a00000070726973657464617465714d580a000000323032322d31312d3132714e7573581d000000302e342e322e342e322e362e312e302e312e302e302e312e302e302e30714f7d715068037d71512858080000007072696f7269747971524d0f27580a000000707269736574646174657153580a000000323032322d31312d313271547573581f000000302e342e322e342e322e362e312e302e312e302e302e312e302e302e302e3071557d715668037d71572858080000007072696f7269747971584d0f27580a000000707269736574646174657159580a000000323032322d31312d3132715a7573581d000000302e342e322e342e322e362e312e302e312e302e302e312e302e302e32715b7d715c68037d715d2858080000007072696f72697479715e4d0f27580a00000070726973657464617465715f580a000000323032322d31312d313271607573752e"><vh>@file lib/main.dart</vh></v>
<v t="swot.20221114225716.1"><vh>@file lib/alphabet.dart</vh></v>
<v t="swot.20221114214205.1"><vh>@file lib/functionality.dart</vh></v>
<v t="swot.20221114222958.1"><vh>@file lib/composite.dart</vh></v>
<v t="swot.20221027203033.1"><vh>@file pubspec.yaml</vh></v>
<v t="swot.20221017093031.150"><vh>@auto-md README.md</vh></v>
</v>
<v t="swot.20221027111311.1"><vh>Alphabetical Example -- Focus use in one place</vh>
<v t="swot.20221024070739.1"><vh>D</vh>
<v t="swot.20221024112547.1"><vh>DismissibleExample</vh>
<v t="swot.20221024112614.2"><vh>DismissibleExample</vh>
<v t="swot.20221024112703.1"><vh>varible</vh></v>
<v t="swot.20221024112614.3"><vh>initState()</vh></v>
<v t="swot.20221024112614.4"><vh>dispose()</vh></v>
<v t="swot.20221024112614.5"><vh>build()</vh>
<v t="swot.20221024113603.2"><vh>Scaffold</vh>
<v t="swot.20221024113603.3"><vh>appBar</vh></v>
<v t="swot.20221024113603.4"><vh>body</vh>
<v t="swot.20221024113627.1"><vh>ListView</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221024112602.1"><vh>show DismissibleExample</vh></v>
</v>
<v t="swot.20221102101617.1"><vh>DividerExample</vh>
<v t="swot.20221102102136.1"><vh>ElevatedButton -- show DividerExample</vh></v>
<v t="swot.20221102101634.2"><vh>DividerExample</vh>
<v t="swot.20221102101634.3"><vh>build()</vh>
<v t="swot.20221102103902.2"><vh>Scaffold</vh>
<v t="swot.20221102103902.3"><vh>appBar</vh></v>
<v t="swot.20221102103902.4"><vh>body</vh>
<v t="swot.20221102103050.2"><vh>Column</vh>
<v t="swot.20221102102110.1"><vh>Container</vh></v>
<v t="swot.20221102101649.1"><vh>Divider</vh></v>
<v t="swot.20221102101920.2"><vh>Container</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221025074714.1"><vh>DraggableScrollableExample</vh>
<v t="swot.20221025074739.2"><vh>DraggableScrollableExample</vh>
<v t="swot.20221025074739.3"><vh>build()</vh>
<v t="swot.20221025081258.2"><vh>Scaffold</vh>
<v t="swot.20221025081258.3"><vh>appBar</vh></v>
<v t="swot.20221025081258.4"><vh>body</vh>
<v t="swot.20221025081316.1"><vh>DraggableScrollableSheet</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221025075357.1"><vh>show DraggableScrollableExample</vh></v>
</v>
<v t="swot.20221025081914.1"><vh>DragTargetExample</vh>
<v t="swot.20221025081939.2"><vh>DragTargetExample</vh>
<v t="swot.20221025081939.3"><vh>varible</vh></v>
<v t="swot.20221025081939.4"><vh>initState()</vh></v>
<v t="swot.20221025081939.5"><vh>dispose()</vh></v>
<v t="swot.20221025081939.6"><vh>build()</vh>
<v t="swot.20221025091431.2"><vh>Scaffold</vh>
<v t="swot.20221025091431.3"><vh>appBar</vh></v>
<v t="swot.20221025091431.4"><vh>body</vh>
<v t="swot.20221025083125.1"><vh>SizedBox</vh>
<v t="swot.20221025083519.1"><vh>Column</vh>
<v t="swot.20221025083732.1"><vh>Draggable</vh></v>
<v t="swot.20221025084843.1"><vh>DragTarget</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221025091113.1"><vh>show DragTargetExample</vh></v>
</v>
<v t="swot.20221025094932.1"><vh>DrawerExample</vh>
<v t="swot.20221025095859.1"><vh>show DrawerExample</vh></v>
<v t="swot.20221025095334.2"><vh>DrawerExample</vh>
<v t="swot.20221025095334.3"><vh>build()</vh>
<v t="swot.20221025095436.2"><vh>Scaffold</vh>
<v t="swot.20221025095436.3"><vh>appBar</vh></v>
<v t="swot.20221025095436.4"><vh>body</vh></v>
<v t="swot.20221025095602.1"><vh>endDrawer</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221110233027.1"><vh>DropDownButtonExample</vh>
<v t="swot.20221110233828.1"><vh>show DropDownButtonExample</vh></v>
<v t="swot.20221110233138.2"><vh>DropDownButtonExample</vh>
<v t="swot.20221110233138.3"><vh>varible</vh></v>
<v t="swot.20221110233138.4"><vh>initState()</vh></v>
<v t="swot.20221110233138.5"><vh>dispose()</vh></v>
<v t="swot.20221110233138.6"><vh>build()</vh>
<v t="swot.20221111000936.2"><vh>Column</vh>
<v t="swot.20221111000057.1"><vh>SizedBox</vh>
<v t="swot.20221110233541.2"><vh>DropdownButton !!!</vh></v>
</v>
<v t="swot.20221111001008.1"><vh>SizedBox</vh>
<v t="swot.20221111001008.2"><vh>DropdownButtonFormField !!!</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221026064223.1"><vh>E</vh>
<v t="swot.20221026072859.1"><vh>ExpandedExample</vh>
<v t="swot.20221026194030.1"><vh>show ExpandedExample</vh></v>
<v t="swot.20221026073602.2"><vh>ExpandedExample -- height in Expanded takes no effect</vh>
<v t="swot.20221026073602.3"><vh>build()</vh>
<v t="swot.20221026193458.1"><vh>Expanded</vh></v>
<v t="swot.20221026193703.1"><vh>Expanded</vh></v>
<v t="swot.20221026193706.1"><vh>Expanded</vh></v>
</v>
</v>
</v>
<v t="swot.20221111201724.1"><vh>ExpansionPanelListExample</vh>
<v t="swot.20221111204125.2"><vh>show ExpansionPanelListExample</vh></v>
<v t="swot.20221111204854.1"><vh>class Item</vh></v>
<v t="swot.20221111201811.2"><vh>ExpansionPanelListExample</vh>
<v t="swot.20221111201811.3"><vh>varible</vh></v>
<v t="swot.20221111201811.4"><vh>initState()</vh></v>
<v t="swot.20221111201811.5"><vh>dispose()</vh></v>
<v t="swot.20221111201811.6"><vh>build()</vh>
<v t="swot.20221111202207.2"><vh>Scaffold</vh>
<v t="swot.20221111202207.3"><vh>appBar</vh></v>
<v t="swot.20221111202207.4"><vh>body</vh>
<v t="swot.20221111202707.2"><vh>SingleChildScrollView</vh>
<v t="swot.20221111213642.2"><vh>Column</vh>
<v t="swot.20221111213817.1"><vh>Text('Radio')</vh></v>
<v t="swot.20221111202728.1"><vh>ExpansionPanelList.radio !!!</vh></v>
<v t="swot.20221111214514.1"><vh>SizedBox</vh></v>
<v t="swot.20221111214154.1"><vh>Text('Multiple')</vh></v>
<v t="swot.20221111212929.1"><vh>ExpansionPanelList !!!</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221031070401.1"><vh>ExpansionTileExample</vh>
<v t="swot.20221031073947.1"><vh>show ExpansionTileExample</vh></v>
<v t="swot.20221031070602.2"><vh>ExpansionTileExample</vh>
<v t="swot.20221031070602.3"><vh>varible</vh></v>
<v t="swot.20221031070602.6"><vh>build()</vh>
<v t="swot.20221031074359.2"><vh>Column</vh>
<v t="swot.20221031074310.1"><vh>ExpansionTile -- basic icon</vh></v>
<v t="swot.20221031073139.1"><vh>ExpansionTile -- _customIcon</vh></v>
<v t="swot.20221031074605.1"><vh>ExpansionTile -- change icon location</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221027111351.1"><vh>F</vh>
<v t="swot.20221030234210.1"><vh>FittedBoxExample</vh>
<v t="swot.20221031063757.2"><vh>ElevatedButton -- show FittedBoxExample</vh></v>
<v t="swot.20221030234221.2"><vh>FittedBoxExample</vh>
<v t="swot.20221030234221.3"><vh>build()</vh>
<v t="swot.20221031064454.2"><vh>Scaffold</vh>
<v t="swot.20221031064454.3"><vh>appBar</vh></v>
<v t="swot.20221031064454.4"><vh>body</vh>
<v t="swot.20221030234303.2"><vh>Center</vh>
<v t="swot.20221031063239.2"><vh>Container</vh>
<v t="swot.20221031070048.1"><vh>FittedBox</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221027112213.1"><vh>FlexibleExample</vh>
<v t="swot.20221027112321.2"><vh>show FlexbleExample</vh></v>
<v t="swot.20221027111458.2"><vh>FlexibleExample</vh>
<v t="swot.20221027111458.3"><vh>build()</vh>
<v t="swot.20221027112522.2"><vh>Scaffold</vh>
<v t="swot.20221027112522.3"><vh>appBar</vh></v>
<v t="swot.20221027112522.4"><vh>body</vh>
<v t="swot.20221027111807.1"><vh>Column</vh>
<v t="swot.20221027111848.1"><vh>Flexible -- FlexFit.loose is default</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221027114210.1"><vh>FloatingActionButtonExample</vh>
<v t="swot.20221027114010.6"><vh>floatingActionButton</vh></v>
</v>
<v t="swot.20221027115609.1"><vh>FormExample</vh>
<v t="swot.20221027121244.1"><vh>show FormExample</vh></v>
<v t="swot.20221027115627.2"><vh>FormExample</vh>
<v t="swot.20221027120023.1"><vh>value</vh></v>
<v t="swot.20221027115627.3"><vh>build()</vh>
<v t="swot.20221027115750.2"><vh>Scaffold</vh>
<v t="swot.20221027115750.3"><vh>appBar</vh></v>
<v t="swot.20221027115750.4"><vh>body</vh>
<v t="swot.20221027115911.1"><vh>Padding</vh>
<v t="swot.20221027115952.1"><vh>Form !!! -- _formKey</vh>
<v t="swot.20221112175512.1"><vh>TextFormField</vh>
<v t="swot.20221112181907.1"><vh>2) validator !!!</vh></v>
</v>
<v t="swot.20221112175530.1"><vh>ElevatedButton</vh>
<v t="swot.20221112182043.1"><vh>1) onPressed !!! _formKey.currentState!.validate()</vh>
<v t="swot.20221112182228.1"><vh>3) showSnackBar</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221027195901.1"><vh>FadeInImageExample</vh>
<v t="swot.20221027203431.2"><vh>FadeInImageExample</vh>
<v t="swot.20221027203431.3"><vh>build()</vh></v>
</v>
<v t="swot.20221027203755.1"><vh>show FadeInImageExample</vh></v>
</v>
<v t="swot.20221027212136.1"><vh>FractionallySizedBoxExample</vh>
<v t="swot.20221027212222.2"><vh>FractionallySizedBoxExample</vh>
<v t="swot.20221027212222.3"><vh>build()</vh>
<v t="swot.20221027212407.2"><vh>Scaffold</vh>
<v t="swot.20221027212407.3"><vh>appBar</vh></v>
<v t="swot.20221027212407.4"><vh>body</vh>
<v t="swot.20221027212916.2"><vh>Center</vh>
<v t="swot.20221027212959.1"><vh>FractionallySizedBox</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221027213559.2"><vh>show FractionallySizedBoxExample</vh></v>
</v>
<v t="swot.20221027214525.1"><vh>FutureBuilderExample</vh>
<v t="swot.20221028065632.1"><vh>show FutureBuilderExample</vh></v>
<v t="swot.20221028064229.2"><vh>FutureBuilderExample</vh>
<v t="swot.20221028064229.3"><vh>varible</vh></v>
<v t="swot.20221028064229.6"><vh>build()</vh>
<v t="swot.20221028064815.1"><vh>FutureBuilder</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221028070441.1"><vh>G</vh>
<v t="swot.20221028083608.1"><vh>GestureDetectorExample</vh>
<v t="swot.20221028085926.1"><vh>show GestureDetectorExample</vh></v>
<v t="swot.20221028084729.2"><vh>GestureDetectorExample</vh>
<v t="swot.20221028084729.3"><vh>varible</vh></v>
<v t="swot.20221028084729.6"><vh>build()</vh></v>
</v>
</v>
<v t="swot.20221031213407.1"><vh>GridPaperExample</vh>
<v t="swot.20221031213940.2"><vh>ElevatedButton -- show GridPaperExample</vh></v>
<v t="swot.20221031213433.2"><vh>GridPaperExample</vh>
<v t="swot.20221031213433.3"><vh>build()</vh>
<v t="swot.20221031213506.2"><vh>Scaffold</vh>
<v t="swot.20221031213506.3"><vh>appBar</vh></v>
<v t="swot.20221031213506.4"><vh>body</vh>
<v t="swot.20221031213547.1"><vh>SizedBox</vh>
<v t="swot.20221031213653.1"><vh>GridPaper</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221028091221.1"><vh>GridViewExample</vh>
<v t="swot.20221028093414.2"><vh>GridViewExample</vh>
<v t="swot.20221028093414.3"><vh>build()</vh>
<v t="swot.20221028122703.2"><vh>Scaffold</vh>
<v t="swot.20221028122703.3"><vh>appBar</vh></v>
<v t="swot.20221028122703.4"><vh>body</vh>
<v t="swot.20221028093753.1"><vh>GridView</vh>
<v t="swot.20221029070417.1"><vh>GridTile -- use GridTileBar</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221028095636.2"><vh>show GridViewExample</vh></v>
</v>
<v t="swot.20221028122858.1"><vh>GridTileExample</vh>
<v t="swot.20221028131344.2"><vh>show GridTileExample</vh></v>
<v t="swot.20221028130417.2"><vh>GridTileExample</vh>
<v t="swot.20221028130417.3"><vh>build()</vh>
<v t="swot.20221028131715.2"><vh>Scaffold</vh>
<v t="swot.20221028131715.3"><vh>appBar</vh></v>
<v t="swot.20221028131715.4"><vh>body</vh>
<v t="swot.20221028130528.1"><vh>Center</vh>
<v t="swot.20221029070735.1"><vh>SizedBox</vh>
<v t="swot.20221029070636.1"><vh>GridTile  -- use Container</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221029090319.1"><vh>H</vh>
<v t="swot.20221029090332.1"><vh>HeroExample</vh>
<v t="swot.20221029090411.1"><vh>show HeroExample</vh></v>
<v t="swot.20221029092751.2"><vh>HeroExample</vh>
<v t="swot.20221029092751.3"><vh>build()</vh>
<v t="swot.20221029094712.2"><vh>Scaffold</vh>
<v t="swot.20221029094712.3"><vh>appBar</vh></v>
<v t="swot.20221029094712.4"><vh>body</vh>
<v t="swot.20221029092810.1"><vh>Center</vh>
<v t="swot.20221029092914.1"><vh>Hero</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221031151733.1"><vh>show HeroExample2</vh></v>
<v t="swot.20221031143119.1"><vh>HeroExample2</vh>
<v t="swot.20221031143139.2"><vh>HeroExample2</vh>
<v t="swot.20221031143139.3"><vh>build()</vh>
<v t="swot.20221031143419.2"><vh>Scaffold</vh>
<v t="swot.20221031143419.3"><vh>appBar</vh></v>
<v t="swot.20221031143419.4"><vh>body</vh>
<v t="swot.20221031143456.1"><vh>Hero</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221023124217.1"><vh>I</vh>
<v t="swot.20221031231855.1"><vh>InkwellExample</vh>
<v t="swot.20221101063450.1"><vh>show InkwellExample</vh></v>
<v t="swot.20221031231919.2"><vh>InkwellExample -- press ALT to scale</vh>
<v t="swot.20221031231919.3"><vh>varible</vh></v>
<v t="swot.20221031231919.6"><vh>build()</vh>
<v t="swot.20221101062927.1"><vh>InkWell</vh></v>
</v>
</v>
</v>
<v t="swot.20221029115239.1"><vh>IgnorePointerExample</vh>
<v t="swot.20221029121446.1"><vh>show IgnorePointerExample</vh></v>
<v t="swot.20221029115307.2"><vh>IgnorePointerExample</vh>
<v t="swot.20221029115307.3"><vh>varible</vh></v>
<v t="swot.20221029115307.4"><vh>initState()</vh></v>
<v t="swot.20221029115307.5"><vh>dispose()</vh></v>
<v t="swot.20221029115307.6"><vh>build()</vh>
<v t="swot.20221029115522.1"><vh>Row</vh>
<v t="swot.20221029115652.2"><vh>ElevatedButton</vh></v>
<v t="swot.20221029120401.1"><vh>IgnorePointer</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221029122138.1"><vh>IndexedStackExample</vh>
<v t="swot.20221029125017.1"><vh>ElevatedButton -- show IndexedStackExample</vh></v>
<v t="swot.20221029122755.2"><vh>IndexedStackExample</vh>
<v t="swot.20221029122755.3"><vh>varible</vh></v>
<v t="swot.20221029122755.4"><vh>initState()</vh></v>
<v t="swot.20221029122755.5"><vh>dispose()</vh></v>
<v t="swot.20221029122755.6"><vh>build()</vh>
<v t="swot.20221029125202.2"><vh>Scaffold</vh>
<v t="swot.20221029125202.3"><vh>appBar</vh></v>
<v t="swot.20221029125202.4"><vh>body</vh>
<v t="swot.20221029123730.2"><vh>Padding</vh>
<v t="swot.20221029123925.2"><vh>Column</vh>
<v t="swot.20221029124213.2"><vh>Row</vh>
<v t="swot.20221029124242.2"><vh>ElevatedButton 0</vh></v>
<v t="swot.20221029124327.1"><vh>ElevatedButton 1</vh></v>
<v t="swot.20221029124328.1"><vh>ElevatedButton 2</vh></v>
</v>
<v t="swot.20221029124503.1"><vh>IndexedStack</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221023150449.1"><vh>InteractiveViewerExample</vh>
<v t="swot.20221029081714.8"><vh>ElevatedButton -- show InteractiveViewerExample</vh></v>
<v t="swot.20221029081714.14"><vh>InteractiveViewerExample</vh>
<v t="swot.20221029081714.17"><vh>build()</vh></v>
</v>
<v t="swot.20221101065031.2"><vh>ElevatedButton -- show InteractiveViewerExample2</vh></v>
<v t="swot.20221101064424.1"><vh>InteractiveViewerExample2 -- scale the image</vh>
<v t="swot.20221101064424.2"><vh>build()</vh></v>
</v>
</v>
</v>
<v t="swot.20221023105739.1"><vh>L</vh>
<v t="swot.20221030225416.1"><vh>LayoutBuilderExample</vh>
<v t="swot.20221030230436.2"><vh>ElevatedButton -- show LayoutBuilderExample</vh></v>
<v t="swot.20221030225430.2"><vh>LayoutBuilderExample</vh>
<v t="swot.20221030225430.3"><vh>build()</vh>
<v t="swot.20221030230818.2"><vh>Scaffold</vh>
<v t="swot.20221030230818.3"><vh>appBar</vh></v>
<v t="swot.20221030230818.4"><vh>body</vh>
<v t="swot.20221030225455.1"><vh>LayoutBuilder</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221023105806.1"><vh>LongPressDraggableExample</vh>
<v t="swot.20221023105920.2"><vh>LongPressDraggableExample</vh>
<v t="swot.20221023105947.1"><vh>varible</vh></v>
<v t="swot.20221023105920.3"><vh>initState()</vh></v>
<v t="swot.20221023105920.4"><vh>dispose()</vh></v>
<v t="swot.20221023105920.5"><vh>build()</vh>
<v t="swot.20221023123049.2"><vh>Scaffold</vh>
<v t="swot.20221023123049.3"><vh>appBar</vh></v>
<v t="swot.20221023123049.4"><vh>body</vh>
<v t="swot.20221023110506.1"><vh>Positioned</vh>
<v t="swot.20221023110634.1"><vh>LongPressDraggable</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221023122724.2"><vh>ElevatedButton -- show LongPressDraggableExample</vh></v>
</v>
<v t="swot.20221029125546.1"><vh>ListViewExample</vh>
<v t="swot.20221029132948.2"><vh>ElevatedButton -- show ListViewExample</vh></v>
<v t="swot.20221029130827.2"><vh>ListViewExample</vh>
<v t="swot.20221029130827.3"><vh>build()</vh>
<v t="swot.20221029133516.2"><vh>Scaffold</vh>
<v t="swot.20221029133516.3"><vh>appBar</vh></v>
<v t="swot.20221029133516.4"><vh>body</vh>
<v t="swot.20221029132335.1"><vh>ListView</vh>
<v t="swot.20221029133717.1"><vh>ListTile</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221023080337.1"><vh>M</vh>
<v t="swot.20221023081507.1"><vh>MaterialBannerExample</vh>
<v t="swot.20221023081047.5"><vh>show MaterialBannerExample</vh></v>
<v t="swot.20221023081535.2"><vh>MaterialBannerExample</vh>
<v t="swot.20221023081535.3"><vh>build()</vh></v>
</v>
</v>
</v>
<v t="swot.20221029134124.1"><vh>N</vh>
<v t="swot.20221029134556.1"><vh>NavigationBarExample</vh>
<v t="swot.20221029141845.2"><vh>ElevatedButton -- show NavigationBarExample</vh></v>
<v t="swot.20221029140231.2"><vh>NavigationBarExample</vh>
<v t="swot.20221029140231.3"><vh>varible</vh></v>
<v t="swot.20221029140231.4"><vh>initState()</vh></v>
<v t="swot.20221029140231.5"><vh>dispose()</vh></v>
<v t="swot.20221029140231.6"><vh>build()</vh>
<v t="swot.20221029141046.2"><vh>Scaffold</vh>
<v t="swot.20221029141046.3"><vh>appBar</vh></v>
<v t="swot.20221029141046.4"><vh>body</vh></v>
<v t="swot.20221029141046.5"><vh>bottomNavigationBar</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221030231020.1"><vh>O</vh>
<v t="swot.20221030231931.1"><vh>OrientationBuilderExample</vh>
<v t="swot.20221030232506.2"><vh>ElevatedButton -- show OrientationBuilderExample</vh></v>
<v t="swot.20221030231950.2"><vh>OrientationBuilderExample</vh>
<v t="swot.20221030231950.3"><vh>build()</vh>
<v t="swot.20221030232043.2"><vh>Scaffold</vh>
<v t="swot.20221030232043.3"><vh>appBar</vh></v>
<v t="swot.20221030232043.4"><vh>body</vh>
<v t="swot.20221030232118.1"><vh>OrientationBuilder</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221030232829.1"><vh>OverflowBarExample</vh>
<v t="swot.20221030233533.2"><vh>ElevatedButton -- show OverflowBarExample</vh></v>
<v t="swot.20221030232847.2"><vh>OverflowBarExample -- auto adjust row or column</vh>
<v t="swot.20221030232847.3"><vh>build()</vh>
<v t="swot.20221030233721.2"><vh>Scaffold</vh>
<v t="swot.20221030233721.3"><vh>appBar</vh></v>
<v t="swot.20221030233721.4"><vh>body</vh>
<v t="swot.20221030233137.2"><vh>Padding</vh>
<v t="swot.20221030233211.1"><vh>OverflowBar</vh>
<v t="swot.20221030233258.2"><vh>ElevatedButton</vh></v>
<v t="swot.20221030233342.2"><vh>ElevatedButton</vh></v>
<v t="swot.20221030233342.1"><vh>ElevatedButton</vh></v>
<v t="swot.20221030233809.1"><vh>ElevatedButton</vh></v>
<v t="swot.20221030233843.1"><vh>ElevatedButton</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221023093247.1"><vh>P</vh>
<v t="swot.20221029234439.1"><vh>PageViewExample</vh>
<v t="swot.20221029234843.2"><vh>ElevatedButton -- show PageViewExample</vh></v>
<v t="swot.20221029234453.2"><vh>PageViewExample</vh>
<v t="swot.20221111064532.1"><vh>varible</vh></v>
<v t="swot.20221111064612.1"><vh>dispose()</vh></v>
<v t="swot.20221029234453.6"><vh>build()</vh>
<v t="swot.20221029235310.2"><vh>Scaffold</vh>
<v t="swot.20221029235310.3"><vh>appBar</vh>
<v t="swot.20221111065157.2"><vh>IconButton left !!!</vh></v>
<v t="swot.20221111065339.1"><vh>IconButton right !!!</vh></v>
</v>
<v t="swot.20221029235310.4"><vh>body</vh>
<v t="swot.20221029234534.1"><vh>PageView !!!</vh>
<v t="swot.20221029234605.1"><vh>Container</vh></v>
<v t="swot.20221029234724.1"><vh>Container</vh></v>
<v t="swot.20221029234725.1"><vh>Container</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221025114659.1"><vh>PopupMenuButtonExample</vh>
<v t="swot.20221025191831.1"><vh>show PopupMenuButtonExample</vh></v>
<v t="swot.20221025114730.2"><vh>PopupMenuButtonExample</vh>
<v t="swot.20221025114730.3"><vh>varible</vh></v>
<v t="swot.20221025114730.6"><vh>build()</vh></v>
</v>
</v>
<v t="swot.20221029235908.1"><vh>PositionedExample</vh>
<v t="swot.20221030082123.2"><vh>ElevatedButton -- show PositionedExample</vh></v>
<v t="swot.20221029235922.2"><vh>PositionedExample</vh>
<v t="swot.20221029235922.3"><vh>build()</vh>
<v t="swot.20221030082723.2"><vh>Scaffold</vh>
<v t="swot.20221030082723.3"><vh>appBar</vh></v>
<v t="swot.20221030082723.4"><vh>body</vh>
<v t="swot.20221030081223.2"><vh>Center</vh>
<v t="swot.20221030081235.1"><vh>Stack</vh>
<v t="swot.20221030081313.1"><vh>Positioned</vh></v>
<v t="swot.20221030081540.1"><vh>Positioned</vh></v>
<v t="swot.20221030081542.1"><vh>Positioned</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221023093415.1"><vh>PreferredSizeExample</vh>
<v t="swot.20221023093803.1"><vh>AppBar</vh></v>
</v>
</v>
<v t="swot.20221023152237.1"><vh>R</vh>
<v t="swot.20221030083029.1"><vh>RadioListTileExample</vh>
<v t="swot.20221030084137.1"><vh>show RadioListTileExample</vh></v>
<v t="swot.20221030084432.1"><vh>radioListTileOptions</vh></v>
<v t="swot.20221030083241.2"><vh>RadioListTileExample</vh>
<v t="swot.20221030083241.3"><vh>varible</vh></v>
<v t="swot.20221030083241.4"><vh>initState()</vh></v>
<v t="swot.20221030083241.5"><vh>dispose()</vh></v>
<v t="swot.20221030083241.6"><vh>build()</vh>
<v t="swot.20221030083721.2"><vh>Column</vh>
<v t="swot.20221030083736.1"><vh>RadioListTile</vh></v>
<v t="swot.20221030084017.1"><vh>RadioListTile</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221031182144.1"><vh>RangeSliderExample</vh>
<v t="swot.20221031182942.1"><vh>show RangeSliderExample</vh></v>
<v t="swot.20221031182202.2"><vh>RangeSliderExample</vh>
<v t="swot.20221031182202.3"><vh>varible</vh></v>
<v t="swot.20221031182202.4"><vh>initState()</vh></v>
<v t="swot.20221031182202.5"><vh>dispose()</vh></v>
<v t="swot.20221031182202.6"><vh>build()</vh>
<v t="swot.20221031182439.1"><vh>varible</vh></v>
<v t="swot.20221031182617.2"><vh>Center</vh>
<v t="swot.20221031182643.1"><vh>RangeSlider</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221030094506.1"><vh>RefreshIndicatorExample</vh>
<v t="swot.20221030181409.2"><vh>ElevatedButton -- show RefreshIndicatorExample</vh></v>
<v t="swot.20221030172700.2"><vh>RefreshIndicatorExample</vh>
<v t="swot.20221030172700.3"><vh>varible</vh></v>
<v t="swot.20221030172700.4"><vh>initState()</vh></v>
<v t="swot.20221030172700.5"><vh>dispose()</vh></v>
<v t="swot.20221030172700.6"><vh>build()</vh>
<v t="swot.20221030182420.2"><vh>Scaffold</vh>
<v t="swot.20221030182420.3"><vh>appBar</vh></v>
<v t="swot.20221030182420.4"><vh>body</vh>
<v t="swot.20221030173047.1"><vh>RefreshIndicator</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221023155312.1"><vh>ReorderableListViewExample  -- longPress</vh>
<v t="swot.20221023152801.2"><vh>ReorderableListViewExample</vh>
<v t="swot.20221023152933.1"><vh>varible</vh></v>
<v t="swot.20221023152801.3"><vh>initState()</vh></v>
<v t="swot.20221023152801.4"><vh>dispose()</vh></v>
<v t="swot.20221023152801.5"><vh>build()</vh>
<v t="swot.20221023154334.2"><vh>Scaffold</vh>
<v t="swot.20221023154334.3"><vh>appBar</vh></v>
<v t="swot.20221023154334.4"><vh>body</vh>
<v t="swot.20221023153058.1"><vh>ReorderableListView</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221023154547.2"><vh>ElevatedButton -- show ReorderableListViewExample</vh></v>
</v>
<v t="swot.20221030204950.1"><vh>RotatedBoxExample</vh>
<v t="swot.20221030205503.1"><vh>show RotatedBoxExample</vh></v>
<v t="swot.20221030205049.2"><vh>RotatedBoxExample</vh>
<v t="swot.20221030205049.3"><vh>build()</vh>
<v t="swot.20221030205124.1"><vh>RotatedBox</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221024091445.1"><vh>S</vh>
<v t="swot.20221030224748.1"><vh>SafeAreaExample</vh>
<v t="swot.20221030225013.2"><vh>ElevatedButton -- show SafeAreaExample</vh></v>
<v t="swot.20221030224821.2"><vh>SafeAreaExample</vh>
<v t="swot.20221030224821.3"><vh>build()</vh>
<v t="swot.20221030225147.1"><vh>SafeArea</vh>
<v t="swot.20221030224837.1"><vh>Text</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221031114906.1"><vh>SearchDelegateExample</vh>
<v t="swot.20221031122837.2"><vh>ElevatedButton -- show SearchDelegateExample</vh></v>
<v t="swot.20221031115636.1"><vh>CustomSearchDelegate</vh></v>
<v t="swot.20221031114947.2"><vh>SearchDelegateExample</vh>
<v t="swot.20221031114947.3"><vh>varible</vh></v>
<v t="swot.20221031114947.6"><vh>build()</vh>
<v t="swot.20221031115107.2"><vh>Scaffold</vh>
<v t="swot.20221031115107.3"><vh>appBar</vh>
<v t="swot.20221031115310.2"><vh>IconButton !!!</vh></v>
</v>
<v t="swot.20221031115107.4"><vh>body</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221030205930.1"><vh>SelectableTextExample</vh>
<v t="swot.20221030210255.1"><vh>show SelectableTextExample</vh></v>
<v t="swot.20221030210033.2"><vh>SelectableTextExample</vh>
<v t="swot.20221101072329.1"><vh>varible</vh></v>
<v t="swot.20221030210033.6"><vh>build()</vh>
<v t="swot.20221101072843.2"><vh>Column</vh>
<v t="swot.20221030210100.1"><vh>SelectableText</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221030210531.1"><vh>SliderExample</vh>
<v t="swot.20221030211748.1"><vh>show SliderExample</vh></v>
<v t="swot.20221030210547.2"><vh>SliderExample</vh>
<v t="swot.20221030210547.3"><vh>varible</vh></v>
<v t="swot.20221030210547.6"><vh>build()</vh>
<v t="swot.20221030211118.1"><vh>Slider</vh></v>
</v>
</v>
</v>
<v t="swot.20221031170952.1"><vh>SliveAppBarExample</vh>
<v t="swot.20221031172540.2"><vh>ElevatedButton -- show SliveAppBarExample</vh></v>
<v t="swot.20221031171010.2"><vh>SliveAppBarExample</vh>
<v t="swot.20221031171010.6"><vh>build()</vh>
<v t="swot.20221031171922.2"><vh>Scaffold</vh>
<v t="swot.20221031171922.4"><vh>body</vh>
<v t="swot.20221031172002.1"><vh>CustomScrollView</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221030212445.1"><vh>SnackBarExample</vh>
<v t="swot.20221030212913.1"><vh>show SnackBarExample</vh></v>
<v t="swot.20221030212509.2"><vh>SnackBarExample</vh>
<v t="swot.20221030212509.3"><vh>build()</vh>
<v t="swot.20221030212550.2"><vh>ElevatedButton</vh></v>
</v>
</v>
</v>
<v t="swot.20221024092102.1"><vh>showDatePickerExample</vh>
<v t="swot.20221024095344.2"><vh>DatePickerExample</vh>
<v t="swot.20221024095406.1"><vh>varible</vh></v>
<v t="swot.20221024095344.3"><vh>initState()</vh></v>
<v t="swot.20221024095344.4"><vh>dispose()</vh></v>
<v t="swot.20221024095344.5"><vh>build()</vh></v>
</v>
<v t="swot.20221024100552.1"><vh>show DatePickerExample</vh></v>
</v>
<v t="swot.20221024103418.1"><vh>showTimePickerExample</vh>
<v t="swot.20221024103554.1"><vh>show TimePickerExample</vh></v>
<v t="swot.20221024103523.2"><vh>TimePickerExample</vh>
<v t="swot.20221024103850.1"><vh>varible</vh></v>
<v t="swot.20221024103523.3"><vh>initState()</vh></v>
<v t="swot.20221024103523.4"><vh>dispose()</vh></v>
<v t="swot.20221024103957.1"><vh>build()</vh></v>
</v>
</v>
<v t="swot.20221024105608.1"><vh>showDateRangePickerExample</vh>
<v t="swot.20221024110030.2"><vh>DateRangePickerExample</vh>
<v t="swot.20221024110048.1"><vh>varible</vh></v>
<v t="swot.20221024110030.3"><vh>initState()</vh></v>
<v t="swot.20221024110030.4"><vh>dispose()</vh></v>
<v t="swot.20221024110030.5"><vh>build()</vh></v>
</v>
<v t="swot.20221024110745.1"><vh>show DateRangePickerExample</vh></v>
</v>
<v t="swot.20221031222105.1"><vh>SpreadOperatorExample</vh>
<v t="swot.20221031225347.2"><vh>ElevatedButton -- show SpreadOperatorExample</vh></v>
<v t="swot.20221031222131.2"><vh>SpreadOperatorExample</vh>
<v t="swot.20221031222131.3"><vh>build()</vh>
<v t="swot.20221031222154.1"><vh>varible</vh></v>
<v t="swot.20221031225000.2"><vh>Scaffold</vh>
<v t="swot.20221031225000.3"><vh>appBar</vh></v>
<v t="swot.20221031225000.4"><vh>body</vh>
<v t="swot.20221031225029.2"><vh>Column</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221029142524.1"><vh>StackExample</vh>
<v t="swot.20221029143324.2"><vh>ElevatedButton -- show StackExample</vh></v>
<v t="swot.20221029142534.2"><vh>StackExample</vh>
<v t="swot.20221029142534.3"><vh>build()</vh>
<v t="swot.20221029142715.2"><vh>Scaffold</vh>
<v t="swot.20221029142715.3"><vh>appBar</vh></v>
<v t="swot.20221029142715.4"><vh>body</vh>
<v t="swot.20221029142815.2"><vh>Center</vh>
<v t="swot.20221029142627.1"><vh>Stack</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221029144518.1"><vh>StepperExample</vh>
<v t="swot.20221029190037.1"><vh>ElevatedButton -- show StepperExample</vh></v>
<v t="swot.20221029144530.2"><vh>StepperExample</vh>
<v t="swot.20221029144530.3"><vh>varible</vh></v>
<v t="swot.20221029144530.4"><vh>initState()</vh></v>
<v t="swot.20221029144530.5"><vh>dispose()</vh></v>
<v t="swot.20221029144530.6"><vh>build()</vh>
<v t="swot.20221029144924.2"><vh>Scaffold</vh>
<v t="swot.20221029144924.3"><vh>appBar</vh></v>
<v t="swot.20221029144924.4"><vh>body</vh>
<v t="swot.20221029144954.2"><vh>Center</vh>
<v t="swot.20221029145033.1"><vh>Stepper</vh>
<v t="swot.20221029191553.1"><vh>steps</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221029211447.1"><vh>StreamBuilderExample</vh>
<v t="swot.20221029213808.1"><vh>ElevatedButton -- show StreamBuilderExample</vh></v>
<v t="swot.20221029211743.1"><vh>generateStream -- FAKE FIREBASE STREAM</vh></v>
<v t="swot.20221029211533.2"><vh>StreamBuilderExample</vh>
<v t="swot.20221029211533.6"><vh>build()</vh>
<v t="swot.20221029213944.2"><vh>Scaffold</vh>
<v t="swot.20221029213944.3"><vh>appBar</vh></v>
<v t="swot.20221029213944.4"><vh>body</vh>
<v t="swot.20221029212803.2"><vh>Center</vh>
<v t="swot.20221029212812.1"><vh>StreamBuilder</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221029215342.1"><vh>SwitchExample</vh>
<v t="swot.20221029215656.1"><vh>show SwitchExample</vh></v>
<v t="swot.20221029215403.2"><vh>SwitchExample</vh>
<v t="swot.20221029215403.3"><vh>varible</vh></v>
<v t="swot.20221029215403.4"><vh>initState()</vh></v>
<v t="swot.20221029215403.5"><vh>dispose()</vh></v>
<v t="swot.20221029215403.6"><vh>build()</vh>
<v t="swot.20221029215500.2"><vh>Center</vh>
<v t="swot.20221029215505.1"><vh>Switch</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221023175848.1"><vh>T</vh>
<v t="swot.20221023181752.1"><vh>TableExample</vh>
<v t="swot.20221023195608.1"><vh>show TableExample</vh></v>
<v t="swot.20221023193833.2"><vh>TableExample</vh>
<v t="swot.20221023193833.3"><vh>build()</vh>
<v t="swot.20221023193950.2"><vh>Scaffold</vh>
<v t="swot.20221023193950.3"><vh>appBar</vh></v>
<v t="swot.20221023193950.4"><vh>body</vh>
<v t="swot.20221023194122.1"><vh>Center</vh>
<v t="swot.20221023200224.1"><vh>SingleChildScrollView</vh>
<v t="swot.20221023194310.1"><vh>Table</vh>
<v t="swot.20221023194533.1"><vh>TableRow</vh>
<v t="swot.20221023194941.1"><vh>TableCell</vh></v>
<v t="swot.20221023194949.1"><vh>TableCell</vh></v>
<v t="swot.20221023194950.1"><vh>TableCell</vh></v>
</v>
<v t="swot.20221023195102.1"><vh>List.generate</vh>
<v t="swot.20221023195414.1"><vh>TableCell</vh></v>
<v t="swot.20221023195426.1"><vh>TableCell</vh></v>
<v t="swot.20221023195426.2"><vh>TableCell</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221114192038.1"><vh>TextExample -- wrap long text</vh>
<v t="swot.20221114195006.2"><vh>ElevatedButton -- show TextExample</vh></v>
<v t="swot.20221114192153.2"><vh>TextExample</vh>
<v t="swot.20221114192153.3"><vh>build()</vh>
<v t="swot.20221114192542.1"><vh>GestureDetector</vh>
<v t="swot.20221114193002.1"><vh>Scaffold</vh>
<v t="swot.20221114193106.1"><vh>appBar</vh></v>
<v t="swot.20221114193135.1"><vh>body</vh>
<v t="swot.20221114202206.1"><vh>Column: MUST use Row -&gt; Expanded</vh>
<v t="swot.20221114195436.1"><vh>Row -&gt; Expanded -&gt; ellipsis</vh></v>
<v t="swot.20221114202534.2"><vh>Divider</vh></v>
<v t="swot.20221114195444.1"><vh>Row -&gt; Expanded -&gt; fade from right</vh></v>
<v t="swot.20221114202534.2"></v>
<v t="swot.20221114204245.1"><vh>Row -&gt; Expanded -&gt; fade from bottom</vh></v>
<v t="swot.20221114202534.2"></v>
<v t="swot.20221114195452.1"><vh>Row -&gt; Expanded -&gt; FittedBox</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221113174340.1"><vh>TextFieldExample</vh>
<v t="swot.20221113181739.2"><vh>ElevatedButton -- show TextFieldExample</vh></v>
<v t="swot.20221113174434.2"><vh>TextFieldExample</vh>
<v t="swot.20221113174434.3"><vh>build()</vh>
<v t="swot.20221113180505.1"><vh>GestureDetector -- unfocus()</vh>
<v t="swot.20221113180641.1"><vh>Scaffold</vh>
<v t="swot.20221113180931.1"><vh>appBar</vh></v>
<v t="swot.20221113181008.1"><vh>body</vh>
<v t="swot.20221113181132.1"><vh>TextField -- number</vh></v>
<v t="swot.20221113181152.1"><vh>TextField -- decimal</vh></v>
<v t="swot.20221113181202.1"><vh>TextField -- phone</vh></v>
<v t="swot.20221113181209.1"><vh>TextField -- done</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221027182452.1"><vh>TextFormFieldExample</vh>
<v t="swot.20221027182544.1"><vh>show TextFormFieldExample</vh></v>
<v t="swot.20221027175533.2"><vh>TextFormFieldExample</vh>
<v t="swot.20221027175533.3"><vh>varible</vh></v>
<v t="swot.20221027175533.6"><vh>build()</vh>
<v t="swot.20221027183133.2"><vh>Scaffold</vh>
<v t="swot.20221027183133.3"><vh>appBar</vh></v>
<v t="swot.20221027183133.4"><vh>body</vh>
<v t="swot.20221027180846.1"><vh>SingleChildScrollView</vh>
<v t="swot.20221027180945.1"><vh>Form</vh>
<v t="swot.20221112184234.1"><vh>2) onChanged !!! Form.of(primaryFocus!.context!).save -&gt; setState(() {})</vh></v>
<v t="swot.20221112184709.1"><vh>child</vh>
<v t="swot.20221027182206.1"><vh>Column</vh>
<v t="swot.20221112180710.1"><vh>List.generate</vh>
<v t="swot.20221112180550.1"><vh>1) TextFormField input string</vh>
<v t="swot.20221112182519.1"><vh>3) onSaved !!! titles[index] = value</vh></v>
</v>
<v t="swot.20221112180604.1"><vh>SizedBox</vh></v>
<v t="swot.20221112180616.1"><vh>4) Card !!! titles[index]</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221029230621.1"><vh>TabBarExample</vh>
<v t="swot.20221029232032.2"><vh>ElevatedButton -- show TabBarExample</vh></v>
<v t="swot.20221029230649.2"><vh>TabBarExample</vh>
<v t="swot.20221029230649.3"><vh>build()</vh>
<v t="swot.20221029230800.1"><vh>DefaultTabController !!!</vh>
<v t="swot.20221029230841.2"><vh>Scaffold</vh>
<v t="swot.20221029230841.3"><vh>appBar</vh>
<v t="swot.20221111222446.1"><vh>TabBar !!!</vh></v>
</v>
<v t="swot.20221029230841.4"><vh>body</vh>
<v t="swot.20221029231559.1"><vh>TabBarView !!!</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221029215808.1"><vh>TabPageSelectorExample</vh>
<v t="swot.20221029222412.2"><vh>ElevatedButton -- show TabPageSelectorExample</vh></v>
<v t="swot.20221029220342.1"><vh>tabPageSelectorWidgets</vh></v>
<v t="swot.20221029220227.2"><vh>TabPageSelectorExample</vh>
<v t="swot.20221029220227.3"><vh>varible</vh></v>
<v t="swot.20221029220227.4"><vh>initState()</vh></v>
<v t="swot.20221029220227.5"><vh>dispose()</vh></v>
<v t="swot.20221029220227.6"><vh>build()</vh>
<v t="swot.20221029221243.2"><vh>Scaffold</vh>
<v t="swot.20221029221243.3"><vh>appBar</vh></v>
<v t="swot.20221029221243.4"><vh>body</vh>
<v t="swot.20221029221337.1"><vh>Stack</vh></v>
</v>
<v t="swot.20221029221243.6"><vh>floatingActionButton</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221031220315.1"><vh>TooltipExample -- long press</vh>
<v t="swot.20221031220908.1"><vh>show TooltipExample</vh></v>
<v t="swot.20221031220414.2"><vh>TooltipExample</vh>
<v t="swot.20221031220414.3"><vh>build()</vh>
<v t="swot.20221031220639.2"><vh>Center</vh>
<v t="swot.20221031220649.1"><vh>Tooltip</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221030213205.1"><vh>V</vh>
<v t="swot.20221030222228.1"><vh>VisibilityExample</vh>
<v t="swot.20221030222854.1"><vh>show VisibilityExample</vh></v>
<v t="swot.20221030222244.2"><vh>VisibilityExample</vh>
<v t="swot.20221030222244.3"><vh>varible</vh></v>
<v t="swot.20221030222244.4"><vh>initState()</vh></v>
<v t="swot.20221030222244.5"><vh>dispose()</vh></v>
<v t="swot.20221030222244.6"><vh>build()</vh>
<v t="swot.20221030222322.2"><vh>Row</vh>
<v t="swot.20221030222414.2"><vh>ElevatedButton</vh></v>
<v t="swot.20221030222619.1"><vh>Visibility</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221030223123.1"><vh>W</vh>
<v t="swot.20221031200617.1"><vh>WillPopScopeExample</vh>
<v t="swot.20221031202945.2"><vh>ElevatedButton -- show WillPopScopeExample</vh></v>
<v t="swot.20221031202343.2"><vh>WillPopScopeExample</vh>
<v t="swot.20221031202343.3"><vh>build()</vh>
<v t="swot.20221031202510.1"><vh>WillPopScope -- disable or enable back button</vh>
<v t="swot.20221031202632.2"><vh>Scaffold</vh>
<v t="swot.20221031202632.3"><vh>appBar</vh></v>
<v t="swot.20221031202632.4"><vh>body</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221030223658.1"><vh>WrapExample</vh>
<v t="swot.20221030223719.2"><vh>WrapExample</vh>
<v t="swot.20221030223719.3"><vh>build()</vh>
<v t="swot.20221030224541.2"><vh>Scaffold</vh>
<v t="swot.20221030224541.3"><vh>appBar</vh></v>
<v t="swot.20221030224541.4"><vh>body</vh>
<v t="swot.20221030223755.2"><vh>Center</vh>
<v t="swot.20221030223816.1"><vh>Wrap</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221030224243.2"><vh>ElevatedButton -- show WrapExample</vh></v>
</v>
</v>
</v>
<v t="swot.20221031125101.1"><vh>Similar Example</vh>
<v t="swot.20221111002547.1"><vh>Button -- popup &amp; dropdown</vh>
<v t="swot.20221025114730.2"></v>
<v t="swot.20221110233138.2"></v>
</v>
<v t="swot.20221112114354.1"><vh>Form</vh>
<v t="swot.20221027115609.1"></v>
<v t="swot.20221027182452.1"></v>
<v t="swot.20221113174340.1"></v>
</v>
<v t="swot.20221031125115.1"><vh>Search</vh>
<v t="swot.20221017093031.256"><vh>AutoCompleteExample 不要在屏幕中部以下(会被软键盘挡住)</vh>
<v t="swot.20221017093031.257"><vh>varible</vh></v>
<v t="swot.20221017093031.258"><vh>build()</vh>
<v t="swot.20221115221134.2"><vh>Container</vh>
<v t="swot.20221115221203.1"><vh>Autocomplete</vh></v>
</v>
</v>
</v>
<v t="swot.20221031114906.1"></v>
<v t="swot.20221031125205.1"><vh>Waiting learing</vh></v>
</v>
<v t="swot.20221112203550.1"><vh>XListTile</vh>
<v t="swot.20221017093031.153"><vh>AboutListTile</vh></v>
<v t="swot.20221031140355.1"><vh>SwitchListTile.adaptive</vh></v>
<v t="swot.20221029133717.1"></v>
<v t="swot.20221022141927.1"><vh>CheckboxListTileExample</vh>
<v t="swot.20221022142602.1"><vh>show CheckboxListTileExample</vh></v>
<v t="swot.20221022141946.2"><vh>CheckboxListTileExample</vh>
<v t="swot.20221022142005.1"><vh>varible</vh></v>
<v t="swot.20221022141946.5"><vh>build()</vh>
<v t="swot.20221022142124.1"><vh>CheckboxListTile</vh></v>
</v>
</v>
</v>
<v t="swot.20221030083029.1"></v>
</v>
</v>
<v t="swot.20221027213439.1"><vh>@spot</vh></v>
</vnodes>
<tnodes>
<t tx="swot.20221017093031.1">Every Flutter Widgets - Part One - 50 Widgets
https://www.youtube.com/watch?v=P3LzkpHBcnI&amp;list=PL82uaKJraAILRBFE1XhCyfvu-Fclc6vv1&amp;index=1&amp;ab_channel=FlutterMapp

TOP 70 Flutter Widgets EVER (Only For Pro)
https://www.youtube.com/watch?v=G1LGOH424lo

Top 35 Flutter Widgets
https://www.youtube.com/watch?v=M9J-JJOuyE0

</t>
<t tx="swot.20221017093031.153">@doc
@language asciidoc
:nofooter:
image::../image/AboutListTile.png[AboutListTile,240]
@c
@language dart
AboutListTile(
  icon: Icon(Icons.info_outline),
  applicationIcon: FlutterLogo(),
  applicationLegalese: 'Legalese',
  applicationName: 'ListTile',
  applicationVersion: 'version 1.0.0',
  aboutBoxChildren: [
    Text('This is a text created by Flutter'),
  ],
),
</t>
<t tx="swot.20221017093031.256">@language dart
@tabwidth -2
class AutoCompleteExample extends StatelessWidget {
  const AutoCompleteExample({Key? key}) : super(key: key);
  @others
}
</t>
<t tx="swot.20221017093031.257">static const List&lt;String&gt; listItems = &lt;String&gt;[
  'apple',
  'banana',
  'melon',
];
</t>
<t tx="swot.20221017093031.258">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221022141927.1"></t>
<t tx="swot.20221022141946.2">@language dart
@tabwidth -2
class CheckboxListTileExample extends StatefulWidget {
  const CheckboxListTileExample({super.key});

  @override
  State&lt;CheckboxListTileExample&gt; createState() =&gt;
      _CheckboxListTileExampleState();
}

class _CheckboxListTileExampleState extends State&lt;CheckboxListTileExample&gt; {
  @others
}

</t>
<t tx="swot.20221022141946.5">@override
Widget build(BuildContext context) {
  return Center(
    child:
    @others
  );
}
</t>
<t tx="swot.20221022142005.1">bool? _isChecked = false;
</t>
<t tx="swot.20221022142124.1">CheckboxListTile(
  title: const Text('Checkbox List Tile'),
  value: _isChecked,
  activeColor: Colors.orangeAccent,
  checkColor: Colors.white,
  tileColor: Colors.black12,
  subtitle: const Text('This is a subtitle'),
  controlAffinity: ListTileControlAffinity.leading,
  tristate: true,
  onChanged: (bool? newValue) {
    setState(() {
      _isChecked = newValue;
    });
  },
),
</t>
<t tx="swot.20221022142602.1">CheckboxListTileExample(),
Divider(),
</t>
<t tx="swot.20221023080337.1"></t>
<t tx="swot.20221023081047.5">MaterialBannerExample(),
</t>
<t tx="swot.20221023081507.1"></t>
<t tx="swot.20221023081535.2">@language dart
@tabwidth -2
class MaterialBannerExample extends StatelessWidget {
  const MaterialBannerExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221023081535.3">@override
Widget build(BuildContext context) {
  return Center(
    child: ElevatedButton(
      child: const Text('Open MaterialBanner'),
      onPressed: () {
        ScaffoldMessenger.of(context).showMaterialBanner(MaterialBanner(
          padding: const EdgeInsets.all(20),
          content: const Text('Subscribe!'),
          leading: const Icon(Icons.notifications_active_outlined),
          elevation: 5,
          backgroundColor: Colors.white12,
          actions: [
            Builder(
              builder: (context) =&gt; TextButton(
                onPressed: () {
                  ScaffoldMessenger.of(context).hideCurrentMaterialBanner();
                },
                child: const Text('Dismiss'),
              ),
            ),
          ],
        ));
      },
    ),
  );
}

@doc
Looking up a deactivated widget's ancestor is unsafe.

At this point the state of the widget's element tree is no longer stable.

To safely refer to a widget's ancestor in its dispose() method, save a reference to the ancestor by calling dependOnInheritedWidgetOfExactType() in the widget's didChangeDependencies() method.

Solved:
https://stackoverflow.com/questions/69141074/showmaterialbanner-doesnt-hide-on-change-route-looking-up-a-deactivated-widgets

@language dart
Builder(  // Can solve above problem
  builder: (context) =&gt; TextButton(
    onPressed: () {
      ScaffoldMessenger.of(context).hideCurrentMaterialBanner();
    },
    child: const Text('Dismiss'),
  ),
)
</t>
<t tx="swot.20221023093247.1"></t>
<t tx="swot.20221023093415.1"></t>
<t tx="swot.20221023093803.1">appBar: PreferredSize(
  preferredSize: const Size.fromHeight(80.0),
  child: Container(
    height: 120,
    decoration: const BoxDecoration(
      gradient: LinearGradient(
        colors: &lt;Color&gt;[
          Colors.redAccent,
          Colors.orangeAccent,
        ],
      ),
    ),
    child: SafeArea(
      child: Center(
        child: ListTile(
          title: const Text('PreferredSize'),
          trailing: IconButton(
            icon: const Icon(Icons.arrow_back, size: 20),
            color: Colors.white,
            onPressed: () {
              Navigator.pop(context);
            },
          ),
        ),
      ),
    ),
  ),
),
</t>
<t tx="swot.20221023105739.1"></t>
<t tx="swot.20221023105806.1"></t>
<t tx="swot.20221023105920.2">@language dart
@tabwidth -2
class LongPressDraggableExample extends StatefulWidget {
  const LongPressDraggableExample({super.key});

  @override
  State&lt;LongPressDraggableExample&gt; createState() =&gt;
      _LongPressDraggableExampleState();
}

class _LongPressDraggableExampleState extends State&lt;LongPressDraggableExample&gt; {
  @others
}

</t>
<t tx="swot.20221023105920.3">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221023105920.4">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221023105920.5">@override
Widget build(BuildContext context) {
  @others
}
</t>
<t tx="swot.20221023105947.1">Offset _offset = const Offset(200, 250);
</t>
<t tx="swot.20221023110506.1">Positioned(
  left: _offset.dx,
  top: _offset.dy,
  child:
  @others
),
</t>
<t tx="swot.20221023110634.1">LongPressDraggable(
  feedback: Image.network(
    'https://img2.baidu.com/it/u=935142738,1114949296&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=PNG?w=200&amp;h=200',
    height: 100,
    color: Colors.orangeAccent,
    colorBlendMode: BlendMode.colorBurn,
  ),
  child: Image.network(
    'https://img2.baidu.com/it/u=935142738,1114949296&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=PNG?w=200&amp;h=200',
    height: 100,
  ),
  onDragEnd: (details) {
    setState(() {
      double adjustment = MediaQuery.of(context).size.height -
          constrains.maxHeight;
      _offset = Offset(
        details.offset.dx,
        details.offset.dy - adjustment,
      );
    });
  },
),
</t>
<t tx="swot.20221023122724.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('LongPressDraggableExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; LongPressDraggableExample(),
      ),
    );
  },
),
</t>
<t tx="swot.20221023123049.2">return Scaffold(
  @others
);

</t>
<t tx="swot.20221023123049.3">appBar: AppBar(
  title: Text('LongPressDraggable'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221023123049.4">body: Center(
  child: LayoutBuilder(
    builder: (context, constrains) {
      return Stack(children: [
        @others
      ]);
    },
  ),
),
</t>
<t tx="swot.20221023124217.1"></t>
<t tx="swot.20221023150449.1"></t>
<t tx="swot.20221023152237.1"></t>
<t tx="swot.20221023152801.2">@language dart
@tabwidth -2
class ReorderableListViewExample extends StatefulWidget {
  const ReorderableListViewExample({super.key});

  @override
  State&lt;ReorderableListViewExample&gt; createState() =&gt;
      _ReorderableListViewExampleState();
}

class _ReorderableListViewExampleState
    extends State&lt;ReorderableListViewExample&gt; {
  @others
}

</t>
<t tx="swot.20221023152801.3">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221023152801.4">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221023152801.5">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221023152933.1">final List&lt;int&gt; items = List&lt;int&gt;.generate(30, (int index) =&gt; index);
</t>
<t tx="swot.20221023153058.1">ReorderableListView(
  children: List.generate(
    items.length,
    (index) =&gt; ListTile(
      key: Key('$index'),
      // tileColor: items[index].isOdd ? Colors.white12 : Colors.white30,
      tileColor: items[index].isOdd ? Colors.grey : Colors.white30,
      title: Text('Item ${items[index]}'),
      trailing: const Icon(Icons.drag_handle_sharp),
    ),
  ),
  onReorder: (int oldIndex, int newIndex) {
    setState(() {
      if (oldIndex &lt; newIndex) {
        newIndex -= 1;
      }
      final int item = items.removeAt(oldIndex);
      items.insert(newIndex, item);
    });
  },
),
</t>
<t tx="swot.20221023154334.2">Scaffold(
  @others
);

</t>
<t tx="swot.20221023154334.3">appBar: AppBar(
  title: Text('ReorderableListView'),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221023154334.4">body:
    @others
</t>
<t tx="swot.20221023154547.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('ReorderableListView'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; ReorderableListViewExample(),
      ),
    );
  },
),
</t>
<t tx="swot.20221023155312.1"></t>
<t tx="swot.20221023175848.1"></t>
<t tx="swot.20221023181752.1"></t>
<t tx="swot.20221023193833.2">@language dart
@tabwidth -2
class TableExample extends StatelessWidget {
  const TableExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221023193833.3">@override
Widget build(BuildContext context) {
  @others
}
</t>
<t tx="swot.20221023193950.2">return Scaffold(
  @others
);

</t>
<t tx="swot.20221023193950.3">appBar: AppBar(
  title: const Text('Table'),
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221023193950.4">body:
    @others
</t>
<t tx="swot.20221023194122.1">Center(
  child: Padding(
  padding: const EdgeInsets.all(15.0),
  child:
      @others
  ),
),
</t>
<t tx="swot.20221023194310.1">Table(
    border: TableBorder.all(color: Colors.white30),
    defaultVerticalAlignment: TableCellVerticalAlignment.middle,
    children: [
      @others
    ],
),
</t>
<t tx="swot.20221023194533.1">const TableRow(
  decoration: BoxDecoration(
    color: Colors.redAccent,
  ),
  children: [
    @others
  ],
),
</t>
<t tx="swot.20221023194941.1">TableCell(
  verticalAlignment: TableCellVerticalAlignment.middle,
  child: Padding(
    padding: EdgeInsets.all(8.0),
    child: Text('Title 1'),
  ),
),
</t>
<t tx="swot.20221023194949.1">TableCell(
  verticalAlignment: TableCellVerticalAlignment.middle,
  child: Padding(
    padding: EdgeInsets.all(8.0),
    child: Text('Title 2'),
  ),
),
</t>
<t tx="swot.20221023194950.1">TableCell(
  verticalAlignment: TableCellVerticalAlignment.middle,
  child: Padding(
    padding: EdgeInsets.all(8.0),
    child: Text('Title 3'),
  ),
),
</t>
<t tx="swot.20221023195102.1">...List.generate(
  30,
  (index) =&gt; const TableRow(
    children: [
      @others
    ],
  ),
),
</t>
<t tx="swot.20221023195414.1">TableCell(
  verticalAlignment: TableCellVerticalAlignment.middle,
  child: Padding(
    padding: EdgeInsets.all(8.0),
    child: Text('Cell 1'),
  ),
),
</t>
<t tx="swot.20221023195426.1">TableCell(
  verticalAlignment: TableCellVerticalAlignment.middle,
  child: Padding(
    padding: EdgeInsets.all(8.0),
    child: Text('Cell 2'),
  ),
),
</t>
<t tx="swot.20221023195426.2">TableCell(
  verticalAlignment: TableCellVerticalAlignment.middle,
  child: Padding(
    padding: EdgeInsets.all(8.0),
    child: Text('Cell 3'),
  ),
),
</t>
<t tx="swot.20221023195608.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('Table'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; const TableExample(),
      ),
    );
  },
),
Divider(),
</t>
<t tx="swot.20221023200224.1">SingleChildScrollView(
  child:
      @others
),
</t>
<t tx="swot.20221024070739.1"></t>
<t tx="swot.20221024091445.1">for node in p.children():
  print(node.h);
</t>
<t tx="swot.20221024092102.1"></t>
<t tx="swot.20221024095344.2">@language dart
@tabwidth -2
class DatePickerExample extends StatefulWidget {
  const DatePickerExample({super.key});

  @override
  State&lt;DatePickerExample&gt; createState() =&gt; _DatePickerExampleState();
}

class _DatePickerExampleState extends State&lt;DatePickerExample&gt; {
  @others
}

</t>
<t tx="swot.20221024095344.3">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221024095344.4">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221024095344.5">@override
Widget build(BuildContext context) {
  return Center(
    child: Row(
      mainAxisAlignment: MainAxisAlignment.start,
      children: [
        ElevatedButton(
          child: const Text('Choose Date'),
          onPressed: () async {
            final DateTime? dateTime = await showDatePicker(
              context: context,
              initialDate: selectedDate,
              firstDate: DateTime(2000),
              lastDate: DateTime(3000),
            );
            if (dateTime != null) {
              setState(() {
                selectedDate = dateTime;
              });
            }
          },
        ),
        SizedBox(width: 10),
        Text(
            "${selectedDate.year}-${selectedDate.month}-${selectedDate.day}"),
      ],
    ),
  );
}
</t>
<t tx="swot.20221024095406.1">DateTime selectedDate = DateTime.now();
// DateTime selectedDate = DateTime(2100);
</t>
<t tx="swot.20221024100552.1">DatePickerExample(),
Divider(),
</t>
<t tx="swot.20221024103418.1"></t>
<t tx="swot.20221024103523.2">@language dart
@tabwidth -2
class TimePickerExample extends StatefulWidget {
  const TimePickerExample({super.key});

  @override
  State&lt;TimePickerExample&gt; createState() =&gt; _TimePickerExampleState();
}

class _TimePickerExampleState extends State&lt;TimePickerExample&gt; {
  @others
}

</t>
<t tx="swot.20221024103523.3">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221024103523.4">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221024103554.1">TimePickerExample(),
Divider(),
</t>
<t tx="swot.20221024103850.1">TimeOfDay selectedTime = TimeOfDay.now();
// TimeOfDay? time = const TimeOfDay(hour: 12, minute: 12);
</t>
<t tx="swot.20221024103957.1">@override
Widget build(BuildContext context) {
  return Center(
    child: Row(
      mainAxisAlignment: MainAxisAlignment.start,
      children: [
        ElevatedButton(
          child: const Text('Choose Time'),
          onPressed: () async {
            final TimeOfDay? timeOfDay = await showTimePicker(
              context: context,
              initialTime: selectedTime,
              initialEntryMode: TimePickerEntryMode.dial,
            );
            if (timeOfDay != null) {
              setState(() {
                selectedTime = timeOfDay;
              });
            }
          },
        ),
        SizedBox(width: 10),
        Text("${selectedTime.hour}:${selectedTime.minute}"),
      ],
    ),
  );
}
</t>
<t tx="swot.20221024105608.1"></t>
<t tx="swot.20221024110030.2">@language dart
@tabwidth -2
class DateRangePickerExample extends StatefulWidget {
  const DateRangePickerExample({super.key});

  @override
  State&lt;DateRangePickerExample&gt; createState() =&gt; _DateRangePickerExampleState();
}

class _DateRangePickerExampleState extends State&lt;DateRangePickerExample&gt; {
  @others
}

</t>
<t tx="swot.20221024110030.3">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221024110030.4">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221024110030.5">@override
Widget build(BuildContext context) {
  return Center(
    child: Row(
      mainAxisAlignment: MainAxisAlignment.start,
      children: [
        ElevatedButton(
          child: const Text('Choose Dates'),
          onPressed: () async {
            final DateTimeRange? dateTimeRange = await showDateRangePicker(
              context: context,
              firstDate: DateTime(2000),
              lastDate: DateTime(3000),
            );
            if (dateTimeRange != null) {
              setState(() {
                selectedDates = dateTimeRange;
              });
            }
          },
        ),
        SizedBox(width: 10),
        Text("${selectedDates.duration.inDays}"),
      ],
    ),
  );
}
</t>
<t tx="swot.20221024110048.1">DateTimeRange selectedDates = DateTimeRange(
  start: DateTime.now(),
  end: DateTime.now(),
);
</t>
<t tx="swot.20221024110745.1">DateRangePickerExample(),
Divider(),
</t>
<t tx="swot.20221024112547.1"></t>
<t tx="swot.20221024112602.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31302d32357103752e">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
  ),
  child: const Text('DismissibleExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; DismissibleExample(),
      ),
    );
  },
),
Divider(),
</t>
<t tx="swot.20221024112614.2">@language dart
@tabwidth -2
class DismissibleExample extends StatefulWidget {
  const DismissibleExample({super.key});

  @override
  State&lt;DismissibleExample&gt; createState() =&gt; _DismissibleExampleState();
}

class _DismissibleExampleState extends State&lt;DismissibleExample&gt; {
  @others
}

</t>
<t tx="swot.20221024112614.3">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221024112614.4">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221024112614.5">@override
Widget build(BuildContext context) {
  @others
}
</t>
<t tx="swot.20221024112703.1">List&lt;int&gt; items = List&lt;int&gt;.generate(50, (int index) =&gt; index);
</t>
<t tx="swot.20221024113603.2">return Scaffold(
  @others
);

</t>
<t tx="swot.20221024113603.3">appBar: AppBar(
  title: Text('DismissibleExample'),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221024113603.4">body:
@others
</t>
<t tx="swot.20221024113627.1">ListView.builder(
  itemCount: items.length,
  padding: const EdgeInsets.symmetric(vertical: 16),
  itemBuilder: (BuildContext contex, int index) {
    return Dismissible(
      background: Container(
        color: Colors.red,
        child: const Icon(Icons.delete),
      ),
      key: ValueKey&lt;int&gt;(items[index]),
      onDismissed: (DismissDirection direction) {
        setState(() {
          items.removeAt(index);
        });
      },
      child: ListTile(
        title: Text('Item ${items[index]}'),
      ),
    );
  },
),
</t>
<t tx="swot.20221025074714.1"></t>
<t tx="swot.20221025074739.2">@language dart
@tabwidth -2
class DraggableScrollableExample extends StatelessWidget {
  const DraggableScrollableExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221025074739.3">@override
Widget build(BuildContext context) {
  @others
}
</t>
<t tx="swot.20221025075357.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
  ),
  child: const Text('DraggableScrollableExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; DraggableScrollableExample(),
      ),
    );
  },
),
Divider(),
</t>
<t tx="swot.20221025081258.2">return Scaffold(
  @others
);

</t>
<t tx="swot.20221025081258.3">appBar: AppBar(
  title: Text('DraggableScrollableSheet'),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221025081258.4">body:
@others
</t>
<t tx="swot.20221025081316.1">DraggableScrollableSheet(
  builder: (BuildContext context, ScrollController scrollController) {
    return Container(
      color: Colors.orangeAccent,
      child: ListView.builder(
        controller: scrollController,
        itemCount: 25,
        itemBuilder: (BuildContext context, int index) {
          return ListTile(
            title: Text('Item $index'),
          );
        },
      ),
    );
  },
),
</t>
<t tx="swot.20221025081914.1"></t>
<t tx="swot.20221025081939.2">@language dart
@tabwidth -2
class DragTargetExample extends StatefulWidget {
  const DragTargetExample({super.key});

  @override
  State&lt;DragTargetExample&gt; createState() =&gt; _DragTargetExampleState();
}

class _DragTargetExampleState extends State&lt;DragTargetExample&gt; {
  @others
}

</t>
<t tx="swot.20221025081939.3">Color caughtColor = Colors.red;
</t>
<t tx="swot.20221025081939.4">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221025081939.5">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221025081939.6">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221025083125.1">SizedBox(
  width: double.infinity,
  child:
  @others
)
</t>
<t tx="swot.20221025083519.1">Column(
  mainAxisAlignment: MainAxisAlignment.spaceBetween,
  crossAxisAlignment: CrossAxisAlignment.center,
  children: [
    @others
  ],
)
</t>
<t tx="swot.20221025083732.1">Draggable(
  data: Colors.orangeAccent,
  child: Container(
    width: 100.0,
    height: 100.0,
    color: Colors.orangeAccent,
    child: const Center(
      child: Text('Box'),
    ),
  ),
  onDraggableCanceled: (velocity, offset) {},
  feedback: Container(
    width: 150.0,
    height: 150.0,
    color: Colors.orangeAccent.withOpacity(0.5),
    child: const Center(
      child: Text(
        'Box...',
        style: TextStyle(
          color: Colors.white,
          decoration: TextDecoration.none,
          fontSize: 18.0,
        ),
      ),
    ),
  ),
),
</t>
<t tx="swot.20221025084843.1">DragTarget(
  onAccept: (Color color) {
    caughtColor = color; // color is Draggable data
  },
  builder: (BuildContext context, List&lt;dynamic&gt; accepted, List&lt;dynamic&gt; rejected) {
    return Container(
      width: 200.0,
      height: 200.0,
      color: accepted.isEmpty
          ? caughtColor
          : Colors.grey.shade200,
      child: const Center(
        child: Text("Drag here"),
      ),
    );
  },
),
</t>
<t tx="swot.20221025091113.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
  ),
  child: const Text('DragTargetExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; DragTargetExample(),
      ),
    );
  },
),

Divider(),
</t>
<t tx="swot.20221025091431.2">Scaffold(
  @others
)

</t>
<t tx="swot.20221025091431.3">appBar: AppBar(
  title: Text('DragTargetExample'),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221025091431.4">body:
@others
</t>
<t tx="swot.20221025094932.1"></t>
<t tx="swot.20221025095334.2">@language dart
@tabwidth -2
class DrawerExample extends StatelessWidget {
  const DrawerExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221025095334.3">@override
Widget build(BuildContext context) {
  @others
}
</t>
<t tx="swot.20221025095436.2">return Scaffold(
  @others
);

</t>
<t tx="swot.20221025095436.3">appBar: AppBar(
  title: Text('NewPage'),
),
</t>
<t tx="swot.20221025095436.4">body: Center(
  child: Builder(
    builder: (context) =&gt; ElevatedButton(
      onPressed: () {
        // Scaffold.of(context).openDrawer();
        Scaffold.of(context).openEndDrawer();
      },
      child: const Text('Open EndDrawer'),
    ),
  ),
),

</t>
<t tx="swot.20221025095602.1">endDrawer: Drawer(
  child: ListView(
    children: [
      const DrawerHeader(
        decoration: BoxDecoration(
          color: Colors.blue,
        ),
        child: Text('Drawer Header'),
      ),
      ListTile(title: const Text('Item 1'), onTap: () {}),
      ListTile(title: const Text('Item 2'), onTap: () {}),
    ],
  ),
),
</t>
<t tx="swot.20221025095859.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('DrawerExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; const DrawerExample(),
      ),
    );
  },
),
Divider(),
</t>
<t tx="swot.20221025114659.1"></t>
<t tx="swot.20221025114730.2">@language dart
@tabwidth -2
class PopupMenuButtonExample extends StatefulWidget {
  const PopupMenuButtonExample({super.key});

  @override
  State&lt;PopupMenuButtonExample&gt; createState() =&gt; _PopupMenuButtonExampleState();
}

class _PopupMenuButtonExampleState extends State&lt;PopupMenuButtonExample&gt; {
  @others
}

</t>
<t tx="swot.20221025114730.3">String title = 'PopupMenuButton';
String item1 = 'First item';
String item2 = 'Second item';
</t>
<t tx="swot.20221025114730.6">@override
Widget build(BuildContext context) {
  return ListTile(
    title: Text(title),
    trailing: PopupMenuButton(
      itemBuilder: (context) =&gt; [
        PopupMenuItem(
          value: item1,
          child: Text(item1),
        ),
        PopupMenuItem(
          value: item2,
          child: Text(item2),
        ),
      ],
      onSelected: (String newValue) {
        setState(() {
          title = newValue;
        });
      },
    ),
  );
}
</t>
<t tx="swot.20221025191831.1">PopupMenuButtonExample(),
Divider(),
</t>
<t tx="swot.20221026064223.1"></t>
<t tx="swot.20221026072859.1"></t>
<t tx="swot.20221026073602.2">@language dart
@tabwidth -2
class ExpandedExample extends StatelessWidget {
  const ExpandedExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221026073602.3">@override
Widget build(BuildContext context) {
  return SizedBox(
    // width: double.infinity,
    height: 100.0,
    child: Column(
      children: [
        @others
      ],
    ),
  );
}
</t>
<t tx="swot.20221026193458.1">Expanded(
  flex: 2,
  child: Container(
    color: Colors.blue,
    width: double.infinity,
    height: 200,
    child: const Center(child: Text('Expanded 1')),
  ),
),
</t>
<t tx="swot.20221026193703.1">Expanded(
  flex: 1,
  child: Container(
    color: Colors.orange,
    width: double.infinity,
    height: 200,
    child: const Center(child: Text('Expanded 2')),
  ),
),
</t>
<t tx="swot.20221026193706.1">Expanded(
  flex: 3,
  child: Container(
    color: Colors.red,
    width: double.infinity,
    height: 200,
    child: const Center(child: Text('Expanded 3')),
  ),
),
</t>
<t tx="swot.20221026194030.1">ExpandedExample(),
Divider(),
</t>
<t tx="swot.20221027111311.1"></t>
<t tx="swot.20221027111351.1"></t>
<t tx="swot.20221027111458.2">@language dart
@tabwidth -2
class FlexibleExample extends StatelessWidget {
  const FlexibleExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221027111458.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221027111807.1">Column(
  children: [
    @others
  ],
)
</t>
<t tx="swot.20221027111848.1">Flexible(
  flex: 6,
  child: Container(
    height: 50, // flex takes no effect
    color: Colors.yellow,
  ),
),
Flexible(
  flex: 4,
  child: Container(
    height: 100, // flex takes no effect
    color: Colors.orange,
  ),
),
Flexible(
  flex: 2,
  child: Container(
    height: 200, // flex takes no effect
    color: Colors.red,
  ),
),
</t>
<t tx="swot.20221027112213.1"></t>
<t tx="swot.20221027112321.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('FlexibleExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; FlexibleExample(),
      ),
    );
  },
),

</t>
<t tx="swot.20221027112522.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221027112522.3">appBar: AppBar(
  title: Text('FlexibleExample'),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221027112522.4">body:
@others
</t>
<t tx="swot.20221027114010.6">floatingActionButtonLocation: FloatingActionButtonLocation.endFloat,
floatingActionButton: FloatingActionButton(
  onPressed: () {},
  backgroundColor: Colors.deepPurple.shade400,
  child: Icon(Icons.add),
),
</t>
<t tx="swot.20221027114210.1"></t>
<t tx="swot.20221027115609.1">@language asciidoc
:nofooter:
.FormExample
image:image/FlutterWidget/FormExample1.png[,200]
image:image/FlutterWidget/FormExample2.png[,200]
</t>
<t tx="swot.20221027115627.2">@language dart
@tabwidth -2
class FormExample extends StatelessWidget {
  FormExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221027115627.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221027115750.2">Scaffold(
  @others
)

</t>
<t tx="swot.20221027115750.3">appBar: AppBar(
  title: Text('FormExample'),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221027115750.4">body:
@others
</t>
<t tx="swot.20221027115911.1">Padding(
  padding: const EdgeInsets.all(8.0),
  child:
  @others
),
</t>
<t tx="swot.20221027115952.1">Form(
  key: _formKey,
  child: Column(
    children: [
      @others
    ],
  ),
),
</t>
<t tx="swot.20221027120023.1">final _formKey = GlobalKey&lt;FormState&gt;();
</t>
<t tx="swot.20221027121244.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('FormExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; FormExample(),
      ),
    );
  },
),

</t>
<t tx="swot.20221027175533.2">@language dart
@tabwidth -2
class TextFormFieldExample extends StatefulWidget {
  const TextFormFieldExample({super.key});

  @override
  State&lt;TextFormFieldExample&gt; createState() =&gt; _TextFormFieldExampleState();
}

class _TextFormFieldExampleState extends State&lt;TextFormFieldExample&gt; {
  @others
}

</t>
<t tx="swot.20221027175533.3">List&lt;String&gt; titles = [
  '',
  '',
  '',
];
</t>
<t tx="swot.20221027175533.6">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221027180846.1">SingleChildScrollView(
  child:
      @others
),
</t>
<t tx="swot.20221027180945.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">Form(
  autovalidateMode: AutovalidateMode.always,
  @others
),
</t>
<t tx="swot.20221027182206.1">Column(
  mainAxisSize: MainAxisSize.min,
  children:
  @others
),
</t>
<t tx="swot.20221027182452.1">@language asciidoc
:nofooter:
.TextFormField
image::image/FlutterWidget/TextFormField.png[,300]
</t>
<t tx="swot.20221027182544.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('TextFormFieldExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; const TextFormFieldExample(),
      ),
    );
  },
),
Divider(),
</t>
<t tx="swot.20221027183133.2">Scaffold(
  @others
);
</t>
<t tx="swot.20221027183133.3">appBar: AppBar(
  title: Text('TextFormField'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221027183133.4">body:
    @others
</t>
<t tx="swot.20221027195901.1"></t>
<t tx="swot.20221027203431.2">@language dart
@tabwidth -2
class FadeInImageExample extends StatelessWidget {
  const FadeInImageExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221027203431.3">@override
Widget build(BuildContext context) {
  return Center(
    child: FadeInImage.assetNetwork(
      width: 100,
      height: 100,
      placeholder: 'assets/loading.gif',
      image:
          'https://img2.baidu.com/it/u=1559210821,716203173&amp;fm=253&amp;fmt=auto&amp;app=120&amp;f=JPEG?w=200&amp;h=200',
    ),
  );
}
</t>
<t tx="swot.20221027203755.1">FadeInImageExample(),
</t>
<t tx="swot.20221027212136.1"></t>
<t tx="swot.20221027212222.2">@language dart
@tabwidth -2
class FractionallySizedBoxExample extends StatelessWidget {
  const FractionallySizedBoxExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221027212222.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221027212407.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221027212407.3">appBar: AppBar(
  title: Text('FractionallySizedBox'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221027212407.4">body:
@others
</t>
<t tx="swot.20221027212916.2">Center(
  child:
  @others
)
</t>
<t tx="swot.20221027212959.1">FractionallySizedBox(
  widthFactor: 0.5,
  heightFactor: 0.5,
  child: Container(
  color: Colors.amberAccent,
  ),
),
</t>
<t tx="swot.20221027213439.1">for node in p.children():
  print(node.h);
</t>
<t tx="swot.20221027213559.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('FractionallySizedBox'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; FractionallySizedBoxExample(),
      ),
    );
  },
),

</t>
<t tx="swot.20221027214525.1"></t>
<t tx="swot.20221028064229.2">@language dart
@tabwidth -2
class FutureBuilderExample extends StatefulWidget {
  const FutureBuilderExample({super.key});

  @override
  State&lt;FutureBuilderExample&gt; createState() =&gt; _FutureBuilderExampleState();
}

class _FutureBuilderExampleState extends State&lt;FutureBuilderExample&gt; {
  @others
}

</t>
<t tx="swot.20221028064229.3">Future&lt;String&gt; getData() async {
  await Future.delayed(
    const Duration(seconds: 1),
  );
  // throw 'Error';
  return 'Super!';
}

</t>
<t tx="swot.20221028064229.6">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221028064815.1">FutureBuilder(
  future: getData(),
  builder: (context, snapshot) {
    if (snapshot.connectionState == ConnectionState.waiting) {
      return const CircularProgressIndicator();
    }
    if (snapshot.hasError) {
      return Text(snapshot.error.toString());
    } else {
      return Row(
        mainAxisSize: MainAxisSize.min,
        children: [
          Text(snapshot.data.toString()),
          ElevatedButton(
            onPressed: () {
              setState(() {});
            },
            child: const Text('FutureBuilder Refresh'),
          ),
        ],
      );
    }
  },
)
</t>
<t tx="swot.20221028065632.1">FutureBuilderExample(),
</t>
<t tx="swot.20221028070441.1"></t>
<t tx="swot.20221028083608.1"></t>
<t tx="swot.20221028084729.2">@language dart
@tabwidth -2
class GestureDetectorExample extends StatefulWidget {
  const GestureDetectorExample({super.key});

  @override
  State&lt;GestureDetectorExample&gt; createState() =&gt; _GestureDetectorExampleState();
}

class _GestureDetectorExampleState extends State&lt;GestureDetectorExample&gt; {
  @others
}

</t>
<t tx="swot.20221028084729.3">int _counter = 0;
</t>
<t tx="swot.20221028084729.6">@override
Widget build(BuildContext context) {
  return Center(
    child: GestureDetector(
      onTap: () {
        setState(() {
          _counter += 1;
        });
      },
      child: Container(
        height: 50,
        color: Colors.orangeAccent,
        child: Row(children: [
          const Text("GestureDetector"),
          Text(
            _counter.toString(),
            style: const TextStyle(fontSize: 40),
          ),
        ]),
      ),
    ),
  );
}
</t>
<t tx="swot.20221028085926.1">GestureDetectorExample(),
</t>
<t tx="swot.20221028091221.1"></t>
<t tx="swot.20221028093414.2">@language dart
@tabwidth -2
class GridViewExample extends StatelessWidget {
  const GridViewExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221028093414.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221028093753.1">GridView.builder(
  itemCount: 10,
  gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
    crossAxisCount: 2,
  ),
  itemBuilder: (_, index) =&gt;
  @others
)

@doc
You can use this also, not use itemBuilder
GridView(
  gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(crossAxisCount: 2),
  children: &lt;Widget&gt;[],
)
</t>
<t tx="swot.20221028095636.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('GridView'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; GridViewExample(),
      ),
    );
  },
),

</t>
<t tx="swot.20221028122703.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221028122703.3">appBar: AppBar(
  title: Text('GridView'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221028122703.4">body:
@others
</t>
<t tx="swot.20221028122858.1"></t>
<t tx="swot.20221028130417.2">@language dart
@tabwidth -2
class GridTileExample extends StatelessWidget {
  const GridTileExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221028130417.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221028130528.1">Center(
  child:
  @others
),
</t>
<t tx="swot.20221028131344.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('GridTileExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; GridTileExample(),
      ),
    );
  },
),

</t>
<t tx="swot.20221028131715.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221028131715.3">appBar: AppBar(
  title: Text('GridTile'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221028131715.4">body:
@others
</t>
<t tx="swot.20221029070417.1">GridTile(
  header: const GridTileBar(
    backgroundColor: Colors.black45,
    leading: Icon(Icons.person),
    title: Text('Flutter App'),
    trailing: Icon(Icons.menu),
  ),
  child: Image.network(
    'https://img2.baidu.com/it/u=1559210821,716203173&amp;fm=253&amp;fmt=auto&amp;app=120&amp;f=JPEG?w=200&amp;h=200',
    fit: BoxFit.cover,
  ),
  footer: const GridTileBar(
    backgroundColor: Colors.black45,
    leading: Icon(Icons.favorite),
  ),
),
</t>
<t tx="swot.20221029070636.1">  GridTile(
  header: Container(
    height: 40,
    color: Colors.black38,
    child: const Center(
      child: Text(
        'Header',
        style: TextStyle(color: Colors.white),
      ),
    ),
  ),
  child: Image.network(
    'https://img2.baidu.com/it/u=1559210821,716203173&amp;fm=253&amp;fmt=auto&amp;app=120&amp;f=JPEG?w=200&amp;h=200',
    fit: BoxFit.cover,
  ),
  footer: Container(
    height: 40,
    color: Colors.black38,
    child: const Center(
      child: Text(
        'Footer',
        style: TextStyle(color: Colors.white),
      ),
    ),
  ),
),
</t>
<t tx="swot.20221029070735.1">SizedBox(
  height: 400,
  width: 300,
  child:
  @others
),
</t>
<t tx="swot.20221029081714.14">@language dart
@tabwidth -2
class InteractiveViewerExample extends StatefulWidget {
  const InteractiveViewerExample({super.key});

  @override
  State&lt;InteractiveViewerExample&gt; createState() =&gt;
      _InteractiveViewerExampleState();
}

class _InteractiveViewerExampleState extends State&lt;InteractiveViewerExample&gt; {
  @others
}

</t>
<t tx="swot.20221029081714.17">@override
Widget build(BuildContext context) {
  return Scaffold(
    appBar: AppBar(
      title: const Text('Tool'),
    ),
    backgroundColor: Colors.orangeAccent,
    body: InteractiveViewer(
      boundaryMargin: const EdgeInsets.all(
        double.infinity,
      ),
      child: Scaffold(
        appBar: AppBar(
          title: const Text('SwotApp'),
        ),
        body: Text('ALT + mouse zoom'),
      ),
    ),
  );
}
</t>
<t tx="swot.20221029081714.8">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('InteractiveViewerExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; InteractiveViewerExample(),
      ),
    );
  },
),
</t>
<t tx="swot.20221029090319.1"></t>
<t tx="swot.20221029090332.1"></t>
<t tx="swot.20221029090411.1">ListTile(
  title: const Text('Hero click'),
  trailing: const Hero(
    tag: 'tag-1',
    child: Icon(Icons.person),
  ),
  onTap: () =&gt; Navigator.of(context).push(
    MaterialPageRoute(
      builder: (context) =&gt; const HeroExample(),
    ),
  ),
),
</t>
<t tx="swot.20221029092751.2">@language dart
@tabwidth -2
class HeroExample extends StatelessWidget {
  const HeroExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221029092751.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221029092810.1">Center(
  child:
  @others
)
</t>
<t tx="swot.20221029092914.1">Hero(
  tag: 'tag-1',
  child: Container(
    color: Colors.orangeAccent,
    width: 100.0,
    height: 100.0,
  ),
),
</t>
<t tx="swot.20221029094712.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221029094712.3">appBar: AppBar(
  title: Text('Hero'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221029094712.4">body:
@others
</t>
<t tx="swot.20221029115239.1"></t>
<t tx="swot.20221029115307.2">@language dart
@tabwidth -2
class IgnorePointerExample extends StatefulWidget {
  const IgnorePointerExample({super.key});

  @override
  State&lt;IgnorePointerExample&gt; createState() =&gt; _IgnorePointerExampleState();
}

class _IgnorePointerExampleState extends State&lt;IgnorePointerExample&gt; {
  @others
}

</t>
<t tx="swot.20221029115307.3">bool ignore = false;
</t>
<t tx="swot.20221029115307.4">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221029115307.5">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221029115307.6">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221029115522.1">Row(
  children: [
    @others
  ],
)
</t>
<t tx="swot.20221029115652.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
    backgroundColor: ignore ? Colors.red : Colors.green,
  ),
  onPressed: () {
    setState(() {
      ignore = !ignore;
    });
  },
  child: Text(
    ignore ? 'Blocked IgnorePointer' : 'Can press IgnorePointer',
  ),
),
</t>
<t tx="swot.20221029120401.1">IgnorePointer(
  ignoring: ignore,
  child: ElevatedButton(
    onPressed: () {},
    child: const Text('IgnorePointer'),
  ),
),
</t>
<t tx="swot.20221029121446.1">IgnorePointerExample(),
</t>
<t tx="swot.20221029122138.1"></t>
<t tx="swot.20221029122755.2">@language dart
@tabwidth -2
class IndexedStackExample extends StatefulWidget {
  const IndexedStackExample({super.key});

  @override
  State&lt;IndexedStackExample&gt; createState() =&gt; _IndexedStackExampleState();
}

class _IndexedStackExampleState extends State&lt;IndexedStackExample&gt; {
  @others
}

</t>
<t tx="swot.20221029122755.3">int index = 0;
</t>
<t tx="swot.20221029122755.4">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221029122755.5">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221029122755.6">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221029123730.2">Padding(
  padding: const EdgeInsets.all(8.0),
  child:
  @others
)
</t>
<t tx="swot.20221029123925.2">Column(
  children: [
    @others
  ],
),
</t>
<t tx="swot.20221029124213.2">Row(
  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
  children: [
    @others
  ],
),
</t>
<t tx="swot.20221029124242.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    setState(() {
      index = 0;
    });
  },
  child: const Text('0'),
),

</t>
<t tx="swot.20221029124327.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    setState(() {
      index = 1;
    });
  },
  child: const Text('1'),
),

</t>
<t tx="swot.20221029124328.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    setState(() {
      index = 2;
    });
  },
  child: const Text('2'),
),

</t>
<t tx="swot.20221029124503.1">IndexedStack(
  index: index,
  children: [
    Center(
      child: Image.network(
          'https://img1.baidu.com/it/u=2346614730,4149113350&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=300&amp;h=231'),
    ),
    Center(
      child: Image.network(
          'https://img0.baidu.com/it/u=3654949633,659950172&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=612'),
    ),
    Center(
      child: Image.network(
          'https://img0.baidu.com/it/u=2809418066,998395186&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=622'),
    ),
  ],
),
</t>
<t tx="swot.20221029125017.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('IndexedStackExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; IndexedStackExample(),
      ),
    );
  },
),
</t>
<t tx="swot.20221029125202.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221029125202.3">appBar: AppBar(
  title: Text('IndexedStack'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221029125202.4">body:
@others
</t>
<t tx="swot.20221029125546.1"></t>
<t tx="swot.20221029130827.2">@language dart
@tabwidth -2
class ListViewExample extends StatelessWidget {
  const ListViewExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221029130827.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221029132335.1">ListView.separated(
  separatorBuilder: (BuildContext context, int index) =&gt; const Divider(color: Colors.white),
  itemCount: 5,
  itemBuilder: (BuildContext context, int index) {
    return
    @others
    ;
  },
),
</t>
<t tx="swot.20221029132948.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(context,
        MaterialPageRoute(builder: (context) =&gt; ListViewExample()));
  },
  child: const Text('ListView'),
),

</t>
<t tx="swot.20221029133516.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221029133516.3">appBar: AppBar(
  title: Text('ListView'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221029133516.4">body:
@others
</t>
<t tx="swot.20221029133717.1">ListTile(
  tileColor: Colors.orangeAccent,
  leading: const Icon(Icons.person),
  title: const Text('Flutter App'),
  trailing: const Icon(Icons.menu),
  onTap: () {},
)
</t>
<t tx="swot.20221029134124.1"></t>
<t tx="swot.20221029134556.1"></t>
<t tx="swot.20221029140231.2">@language dart
@tabwidth -2
class NavigationBarExample extends StatefulWidget {
  const NavigationBarExample({super.key});

  @override
  State&lt;NavigationBarExample&gt; createState() =&gt; _NavigationBarExampleState();
}

class _NavigationBarExampleState extends State&lt;NavigationBarExample&gt; {
  @others
}

</t>
<t tx="swot.20221029140231.3">int currentIndex = 0;

static const List body = [
  Icon(Icons.home, size: 50),
  Icon(Icons.search, size: 50),
  Icon(Icons.person, size: 50),
];
</t>
<t tx="swot.20221029140231.4">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221029140231.5">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221029140231.6">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221029141046.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221029141046.3">appBar: AppBar(
  title: Text('NavigationBar'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221029141046.4">body: Center(
  child: body.elementAt(currentIndex),
),

</t>
<t tx="swot.20221029141046.5">bottomNavigationBar: NavigationBar(
  destinations: const [
    NavigationDestination(
      label: 'Home',
      icon: Icon(Icons.home),
    ),
    NavigationDestination(
      label: 'Menu',
      icon: Icon(Icons.menu),
    ),
    NavigationDestination(
      label: 'Profile',
      icon: Icon(Icons.person),
    ),
  ],
  selectedIndex: currentIndex,
  onDestinationSelected: (int index) {
    setState(() {
      currentIndex = index;
    });
  },
),
</t>
<t tx="swot.20221029141845.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; NavigationBarExample(),
      ),
    );
  },
  child: const Text('NavigationBarExample'),
),

</t>
<t tx="swot.20221029142524.1"></t>
<t tx="swot.20221029142534.2">@language dart
@tabwidth -2
class StackExample extends StatelessWidget {
  const StackExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221029142534.3">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221029142627.1">Stack(
  children: [
    Center(
      child: Image.network(
        'https://img0.baidu.com/it/u=3512755295,746862310&amp;fm=253&amp;fmt=auto&amp;app=120&amp;f=JPEG?w=236&amp;h=500',
        width: 500,
      ),
    ),
    Center(
      child: Image.network(
        'https://img1.baidu.com/it/u=695618151,2431461217&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=350&amp;h=250',
        width: 200,
      ),
    ),
  ],
)
</t>
<t tx="swot.20221029142715.2">Scaffold(
  @others
);
</t>
<t tx="swot.20221029142715.3">appBar: AppBar(
  title: Text('Stack'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221029142715.4">body:
    @others
</t>
<t tx="swot.20221029142815.2">Center(
  child:
      @others
),
</t>
<t tx="swot.20221029143324.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; StackExample(),
      ),
    );
  },
  child: const Text('StackExample'),
),

</t>
<t tx="swot.20221029144518.1">不错的文章
https://www.jianshu.com/p/22914561a2e8</t>
<t tx="swot.20221029144530.2">@language dart
@tabwidth -2
class StepperExample extends StatefulWidget {
  const StepperExample({super.key});

  @override
  State&lt;StepperExample&gt; createState() =&gt; _StepperExampleState();
}

class _StepperExampleState extends State&lt;StepperExample&gt; {
  @others
}

</t>
<t tx="swot.20221029144530.3">int _currentStep = 0;
</t>
<t tx="swot.20221029144530.4">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221029144530.5">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221029144530.6">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221029144924.2">Scaffold(
  @others
);
</t>
<t tx="swot.20221029144924.3">appBar: AppBar(
  title: Text('Stepper'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221029144924.4">body:
    @others
</t>
<t tx="swot.20221029144954.2">Center(
  child:
      @others
),
</t>
<t tx="swot.20221029145033.1">Stepper(
  @others
  // type: StepperType.horizontal,
  currentStep: _currentStep,

  onStepTapped: (int newIndex) {
    setState(() {
      _currentStep = newIndex;
    });
  },
  onStepContinue: () {
    if (_currentStep != 2) {
      setState(() {
        _currentStep += 1;
      });
    }
  },
  onStepCancel: () {
    if (_currentStep != 0) {
      setState(() {
        _currentStep -= 1;
      });
    }
  },
),
</t>
<t tx="swot.20221029190037.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; StepperExample(),
      ),
    );
  },
  child: const Text('StepperExample'),
),

</t>
<t tx="swot.20221029191553.1">steps: [
  Step(
    isActive: _currentStep == 0,
    title: const Text('Step 1'),
    content: const Text(
      'Information for step 1',
      style: TextStyle(
        color: Colors.redAccent,
      ),
    ),
  ),
  Step(
    isActive: _currentStep == 1,
    title: const Text('Step 2'),
    content: const Text(
      'Information for step 2',
      style: TextStyle(
        color: Colors.redAccent,
      ),
    ),
  ),
  Step(
    isActive: _currentStep == 2,
    title: const Text('Step 3'),
    content: const Text(
      'Information for step 3',
      style: TextStyle(
        color: Colors.redAccent,
      ),
    ),
  ),
],
</t>
<t tx="swot.20221029211447.1"></t>
<t tx="swot.20221029211533.2">@language dart
@tabwidth -2
class StreamBuilderExample extends StatefulWidget {
  const StreamBuilderExample({super.key});

  @override
  State&lt;StreamBuilderExample&gt; createState() =&gt; _StreamBuilderExampleState();
}

class _StreamBuilderExampleState extends State&lt;StreamBuilderExample&gt; {
  @others
}

</t>
<t tx="swot.20221029211533.6">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221029211743.1">@language dart
@tabwidth -2
Stream&lt;int&gt; generateStream = (() async* {
  await Future&lt;void&gt;.delayed(const Duration(seconds: 2));
  yield 1;
  await Future&lt;void&gt;.delayed(const Duration(seconds: 1));
  yield 2;
  // throw 'An error occured';  // test After show 1, Error displayed
  await Future&lt;void&gt;.delayed(const Duration(seconds: 1));
  yield 3;
})();

</t>
<t tx="swot.20221029212803.2">Center(
  child:
      @others
),
</t>
<t tx="swot.20221029212812.1">StreamBuilder(
  stream: generateStream,
  initialData: 0,
  builder: (context, snapshot) {
    if (snapshot.connectionState == ConnectionState.waiting) {
      return const CircularProgressIndicator.adaptive();
    }
    if (snapshot.hasError) {
      return const Text('Error');
    } else {
      return Text(
        snapshot.data.toString(),
        style: const TextStyle(fontSize: 40),
      );
    }
  },
),
</t>
<t tx="swot.20221029213808.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; StreamBuilderExample(),
      ),
    );
  },
  child: const Text('StreamBuilderExample'),
),
</t>
<t tx="swot.20221029213944.2">Scaffold(
  @others
);
</t>
<t tx="swot.20221029213944.3">appBar: AppBar(
  title: Text('StreamBuilder'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221029213944.4">body:
    @others
</t>
<t tx="swot.20221029215342.1"></t>
<t tx="swot.20221029215403.2">@language dart
@tabwidth -2
class SwitchExample extends StatefulWidget {
  const SwitchExample({super.key});

  @override
  State&lt;SwitchExample&gt; createState() =&gt; _SwitchExampleState();
}

class _SwitchExampleState extends State&lt;SwitchExample&gt; {
  @others
}

</t>
<t tx="swot.20221029215403.3">bool isSwitched = false;
</t>
<t tx="swot.20221029215403.4">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221029215403.5">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221029215403.6">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221029215500.2">Center(
  child:
      @others
);
</t>
<t tx="swot.20221029215505.1">Switch(
  value: isSwitched,
  onChanged: (value) {
    setState(() {
      isSwitched = value;
    });
  },
)
</t>
<t tx="swot.20221029215656.1">SwitchExample(),
</t>
<t tx="swot.20221029215808.1"></t>
<t tx="swot.20221029220227.2">@language dart
@tabwidth -2
class TabPageSelectorExample extends StatefulWidget {
  const TabPageSelectorExample({super.key});

  @override
  State&lt;TabPageSelectorExample&gt; createState() =&gt; _TabPageSelectorExampleState();
}

class _TabPageSelectorExampleState extends State&lt;TabPageSelectorExample&gt;
    with SingleTickerProviderStateMixin {
  @others
}

</t>
<t tx="swot.20221029220227.3">late final TabController controller;
int _index = 0;
</t>
<t tx="swot.20221029220227.4">@override
void initState() {
  super.initState();
  controller = TabController(
    length: tabPageSelectorWidgets.length,
    initialIndex: _index,
    vsync: this,
  );
}

</t>
<t tx="swot.20221029220227.5">@override
void dispose() {
  controller.dispose();
  super.dispose();
}

</t>
<t tx="swot.20221029220227.6">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221029220342.1">List&lt;Widget&gt; tabPageSelectorWidgets = const [
  Icon(Icons.home, size: 80),
  Icon(Icons.settings, size: 80),
  Icon(Icons.person, size: 80),
];

</t>
<t tx="swot.20221029221243.2">Scaffold(
  @others
);
</t>
<t tx="swot.20221029221243.3">appBar: AppBar(
  title: Text('TabPageSelector'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221029221243.4">body:
    @others
</t>
<t tx="swot.20221029221243.6">floatingActionButton: ButtonBar(
  children: [
    FloatingActionButton.small(
      onPressed: () {
        (_index != tabPageSelectorWidgets.length - 1)
        ? _index++
        : _index = 0;
        controller.animateTo(_index);
      },
      hoverElevation: 0,
      elevation: 0,
      child: const Icon(Icons.navigate_next),
    ),
  ],
),
</t>
<t tx="swot.20221029221337.1">Stack(
  alignment: Alignment.center,
  children: [
    TabBarView(
      controller: controller, // TabController
      children: tabPageSelectorWidgets,
    ),
    Positioned(
      bottom: 40,
      child: TabPageSelector(
        controller: controller, // TabController
        color: Colors.black38,
      ),
    ),
  ],
),
</t>
<t tx="swot.20221029222412.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; TabPageSelectorExample(),
      ),
    );
  },
  child: const Text('TabPageSelector'),
),

</t>
<t tx="swot.20221029230621.1"></t>
<t tx="swot.20221029230649.2">@language dart
@tabwidth -2
class TabBarExample extends StatelessWidget {
  const TabBarExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221029230649.3">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221029230800.1">DefaultTabController(
  length: 3,
  child:
      @others
);
</t>
<t tx="swot.20221029230841.2">Scaffold(
  @others
),
</t>
<t tx="swot.20221029230841.3">appBar: AppBar(
  title: Text('TabBar'),
  bottom:
      @others
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221029230841.4">body:
    @others
</t>
<t tx="swot.20221029231559.1">TabBarView(
  children: [
    Container(
      color: Colors.orangeAccent,
      child: const Icon(Icons.home),
    ),
    Container(
      color: Colors.redAccent,
      child: const Icon(Icons.settings),
    ),
    Container(
      color: Colors.orangeAccent,
      child: const Icon(Icons.person),
    ),
  ],
)
</t>
<t tx="swot.20221029232032.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; TabBarExample(),
      ),
    );
  },
  child: const Text('TabBarExample'),
),

</t>
<t tx="swot.20221029234439.1"></t>
<t tx="swot.20221029234453.2">@language dart
@tabwidth -2
class PageViewExample extends StatefulWidget {
  const PageViewExample({super.key});

  @override
  State&lt;PageViewExample&gt; createState() =&gt; _PageViewExampleState();
}

class _PageViewExampleState extends State&lt;PageViewExample&gt; {
  @others
}

</t>
<t tx="swot.20221029234453.6">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221029234534.1">PageView(
  // physics: const NeverScrollableScrollPhysics(),
  // scrollDirection: Axis.vertical,  // default is Axis.horizontal
  controller: controller,
  onPageChanged: (index) {
    print('Page ${index + 1}');
  },
  children: [
    @others
  ],
),
</t>
<t tx="swot.20221029234605.1">Container(
  color: Colors.orangeAccent,
  child: const Center(
    child: Text(
      'Page 1',
      style: TextStyle(fontSize: 100),
    ),
  ),
),
</t>
<t tx="swot.20221029234724.1">Container(
  color: Colors.redAccent,
  child: const Center(
    child: Text(
      'Page 2',
      style: TextStyle(fontSize: 100),
    ),
  ),
),
</t>
<t tx="swot.20221029234725.1">Container(
  color: Colors.blueGrey,
  child: const Center(
    child: Text(
      'Page 3',
      style: TextStyle(fontSize: 100),
    ),
  ),
),
</t>
<t tx="swot.20221029234843.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; PageViewExample(),
      ),
    );
  },
  child: const Text('PageViewExample'),
),

</t>
<t tx="swot.20221029235310.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221029235310.3">appBar: AppBar(
  title: Text('PageViewExample'),
  // leading: Icon(Icons.menu),
  elevation: 0.0,
  centerTitle: true,
  actions: [
    @others
  ],
),
</t>
<t tx="swot.20221029235310.4">body:
@others
</t>
<t tx="swot.20221029235908.1"></t>
<t tx="swot.20221029235922.2">@language dart
@tabwidth -2
class PositionedExample extends StatelessWidget {
  const PositionedExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221029235922.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221030081223.2">Center(
  child:
  @others
),
</t>
<t tx="swot.20221030081235.1">Stack(
  children: [
    @others
  ],
),
</t>
<t tx="swot.20221030081313.1">Positioned(
  left: 20,
  top: 20,
  child: Image.network(
    'https://img0.baidu.com/it/u=3216067279,1683207701&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=250&amp;h=238',
    width: 250,
  ),
),
</t>
<t tx="swot.20221030081540.1">Positioned(
  left: 60,
  top: 120,
  child: Image.network(
    'https://img2.baidu.com/it/u=3325552638,2237228879&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=260&amp;h=298',
    width: 250,
  ),
),
</t>
<t tx="swot.20221030081542.1">Positioned(
  left: 100,
  top: 220,
  child: Image.network(
    'https://img1.baidu.com/it/u=3146473707,3528165124&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=307&amp;h=298',
    width: 250,
  ),
),
</t>
<t tx="swot.20221030082123.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; PositionedExample(),
      ),
    );
  },
  child: const Text('PositionedExample'),
),
</t>
<t tx="swot.20221030082723.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221030082723.3">appBar: AppBar(
  title: Text('PositionedExample'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221030082723.4">body:
@others
</t>
<t tx="swot.20221030083029.1"></t>
<t tx="swot.20221030083241.2">@language dart
@tabwidth -2
class RadioListTileExample extends StatefulWidget {
  const RadioListTileExample({super.key});

  @override
  State&lt;RadioListTileExample&gt; createState() =&gt; _RadioListTileExampleState();
}

class _RadioListTileExampleState extends State&lt;RadioListTileExample&gt; {
  @others
}

</t>
<t tx="swot.20221030083241.3">String currentOption = radioListTileOptions[0];
</t>
<t tx="swot.20221030083241.4">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221030083241.5">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221030083241.6">@override
Widget build(BuildContext context) {
  return
      @others
      ;
}
</t>
<t tx="swot.20221030083721.2">Column(
  mainAxisSize: MainAxisSize.min,
  children: [
    @others
  ],
)

</t>
<t tx="swot.20221030083736.1">RadioListTile(
  title: const Text('Option 1'),
  value: radioListTileOptions[0],
  groupValue: currentOption,
  onChanged: (value) {
    setState(() {
      currentOption = value.toString();
    });
  },
),
</t>
<t tx="swot.20221030084017.1">RadioListTile(
  title: const Text('Option 2'),
  value: radioListTileOptions[1],
  groupValue: currentOption,
  onChanged: (value) {
    setState(() {
      currentOption = value.toString();
    });
  },
),
</t>
<t tx="swot.20221030084137.1">RadioListTileExample(),
</t>
<t tx="swot.20221030084432.1">List&lt;String&gt; radioListTileOptions = ['Option 1', 'Option 2'];

</t>
<t tx="swot.20221030094506.1"></t>
<t tx="swot.20221030172700.2">@language dart
@tabwidth -2
class RefreshIndicatorExample extends StatefulWidget {
  const RefreshIndicatorExample({super.key});

  @override
  State&lt;RefreshIndicatorExample&gt; createState() =&gt;
      _RefreshIndicatorExampleState();
}

class _RefreshIndicatorExampleState extends State&lt;RefreshIndicatorExample&gt; {
  @others
}

</t>
<t tx="swot.20221030172700.3">List&lt;String&gt; items = [
  "Item 1",
  "Item 2",
];
</t>
<t tx="swot.20221030172700.4">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221030172700.5">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221030172700.6">@override
Widget build(BuildContext context) {
  return
      @others
      ;
}
</t>
<t tx="swot.20221030173047.1">RefreshIndicator(
  color: Colors.white,
  backgroundColor: Colors.orangeAccent,
  onRefresh: () async {
    await Future.delayed(const Duration(seconds: 1));
    int nextItem = items.length + 1;
    setState(() {
      items.add("Item $nextItem");
    });
  },
  child: ListView.builder(
    padding: const EdgeInsets.all(5),
    itemCount: items.length,
    itemBuilder: ((context, index) =&gt;
      Padding(
        padding: const EdgeInsets.all(8.0),
        child: ListTile(
          title: Text(items[index]),
          tileColor: Colors.white24,
        ),
      )
    ),
  ),
),
</t>
<t tx="swot.20221030181409.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; RefreshIndicatorExample(),
      ),
    );
  },
  child: const Text('RefreshIndicatorExample'),
),

</t>
<t tx="swot.20221030182420.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221030182420.3">appBar: AppBar(
  title: Text('RefreshIndicatorExample'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221030182420.4">body:
    @others
</t>
<t tx="swot.20221030204950.1"></t>
<t tx="swot.20221030205049.2">@language dart
@tabwidth -2
class RotatedBoxExample extends StatelessWidget {
  const RotatedBoxExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221030205049.3">@override
Widget build(BuildContext context) {
  return
      @others
      ;
}
</t>
<t tx="swot.20221030205124.1">const RotatedBox(
  // change this
  quarterTurns: 1,
  // quarterTurns: 2,
  child: FlutterLogo(size: 60),
)
</t>
<t tx="swot.20221030205503.1">RotatedBoxExample(),
</t>
<t tx="swot.20221030205930.1"></t>
<t tx="swot.20221030210033.2">@language dart
@tabwidth -2
class SelectableTextExample extends StatefulWidget {
  const SelectableTextExample({super.key});

  @override
  State&lt;SelectableTextExample&gt; createState() =&gt; _SelectableTextExampleState();
}

class _SelectableTextExampleState extends State&lt;SelectableTextExample&gt; {
  @others
}

</t>
<t tx="swot.20221030210033.6">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221030210100.1">Text(
  selectedText,
  style: _styleBlue,
),
TextSelectionTheme(
  data: const TextSelectionThemeData(
    selectionColor: Colors.yellow,
  ),
  child: SelectableText(
    _selectableText,
    style: _style,
    onSelectionChanged: (selection, cause) {
      setState(() {
        selectedText = _selectableText.substring(
          selection.start,
          selection.end,
        );
      });
    },
  ),
),
</t>
<t tx="swot.20221030210255.1">SelectableTextExample(),
</t>
<t tx="swot.20221030210531.1"></t>
<t tx="swot.20221030210547.2">@language dart
@tabwidth -2
class SliderExample extends StatefulWidget {
  const SliderExample({super.key});

  @override
  State&lt;SliderExample&gt; createState() =&gt; _SliderExampleState();
}

class _SliderExampleState extends State&lt;SliderExample&gt; {
  @others
}

</t>
<t tx="swot.20221030210547.3">double _currentSliderValue = 20;
</t>
<t tx="swot.20221030210547.6">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221030211118.1">Slider(
  value: _currentSliderValue,
  max: 100,
  divisions: 5,
  label: _currentSliderValue.round().toString(),
  onChanged: (double value) {
    setState(() {
      _currentSliderValue = value;
    });
  },
);
</t>
<t tx="swot.20221030211748.1">SliderExample(),
</t>
<t tx="swot.20221030212445.1"></t>
<t tx="swot.20221030212509.2">@language dart
@tabwidth -2
class SnackBarExample extends StatelessWidget {
  const SnackBarExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221030212509.3">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221030212550.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
    // backgroundColor: Colors.orangeAccent,
  ),
  onPressed: () {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: const Text('Flutter App'),
        action: SnackBarAction(
          label: 'Undo',
          onPressed: () {},
        ),
      ),
    );
  },
  child: const Text('Show SnackBar'),
);

</t>
<t tx="swot.20221030212913.1">SnackBarExample(),
</t>
<t tx="swot.20221030213205.1"></t>
<t tx="swot.20221030222228.1"></t>
<t tx="swot.20221030222244.2">@language dart
@tabwidth -2
class VisibilityExample extends StatefulWidget {
  const VisibilityExample({super.key});

  @override
  State&lt;VisibilityExample&gt; createState() =&gt; _VisibilityExampleState();
}

class _VisibilityExampleState extends State&lt;VisibilityExample&gt; {
  @others
}

</t>
<t tx="swot.20221030222244.3">bool isVisible = true;
</t>
<t tx="swot.20221030222244.4">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221030222244.5">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221030222244.6">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221030222322.2">Row(
  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
  children: [
    @others
  ],
);
</t>
<t tx="swot.20221030222414.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    setState(() {
      isVisible = !isVisible;
    });
  },
  child: const Text('Show/Hide Visibility'),
),

</t>
<t tx="swot.20221030222619.1">Visibility(
  visible: isVisible,
  child: Image.network(
    'https://img2.baidu.com/it/u=11150005,537174686&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=435&amp;h=500',
    width: 100,
  ),
),
</t>
<t tx="swot.20221030222854.1">VisibilityExample(),
</t>
<t tx="swot.20221030223123.1"></t>
<t tx="swot.20221030223658.1"></t>
<t tx="swot.20221030223719.2">@language dart
@tabwidth -2
class WrapExample extends StatelessWidget {
  const WrapExample({Key? key}) : super(key: key);
  @others
}
</t>
<t tx="swot.20221030223719.3">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221030223755.2">Center(
  child:
      @others
),
</t>
<t tx="swot.20221030223816.1">Wrap(
  spacing: 10.0,
  runSpacing: 40.0,
  children: List.generate(
    10,
    (index) =&gt; const Chip(
      avatar: CircleAvatar(
        backgroundColor: Colors.orangeAccent,
        child: Icon(Icons.person),
      ),
      label: Text('SwotPP'),
    ),
  ),
)
</t>
<t tx="swot.20221030224243.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; WrapExample(),
      ),
    );
  },
  child: const Text('WrapExample'),
),

</t>
<t tx="swot.20221030224541.2">Scaffold(
  @others
);
</t>
<t tx="swot.20221030224541.3">appBar: AppBar(
  title: Text('WrapExample'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221030224541.4">body:
    @others
</t>
<t tx="swot.20221030224748.1"></t>
<t tx="swot.20221030224821.2">@language dart
@tabwidth -2
class SafeAreaExample extends StatelessWidget {
  const SafeAreaExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221030224821.3">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221030224837.1">Text(
  'Swotpp App',
  style: TextStyle(fontSize: 30),
)
</t>
<t tx="swot.20221030225013.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; SafeAreaExample(),
      ),
    );
  },
  child: const Text('SafeAreaExample'),
),

</t>
<t tx="swot.20221030225147.1">SafeArea(
child:
    @others
);
</t>
<t tx="swot.20221030225416.1"></t>
<t tx="swot.20221030225430.2">@language dart
@tabwidth -2
class LayoutBuilderExample extends StatelessWidget {
  const LayoutBuilderExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221030225430.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221030225455.1">LayoutBuilder(
  builder: (BuildContext context, BoxConstraints constraints) {
    if (constraints.maxWidth &gt; 600) {
      return Center(
        child: Image.network(
          'https://img1.baidu.com/it/u=2393225502,1254584585&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=500',
        ),
      );
    } else {
      return const Center(
        child: Text('Screen under 600'),
      );
    }
  },
),
</t>
<t tx="swot.20221030230436.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; LayoutBuilderExample(),
      ),
    );
  },
  child: const Text('LayoutBuilderExample'),
),

</t>
<t tx="swot.20221030230818.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221030230818.3">appBar: AppBar(
  title: Text('LayoutBuilderExample'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221030230818.4">body:
@others
</t>
<t tx="swot.20221030231020.1"></t>
<t tx="swot.20221030231931.1"></t>
<t tx="swot.20221030231950.2">@language dart
@tabwidth -2
class OrientationBuilderExample extends StatelessWidget {
  const OrientationBuilderExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221030231950.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221030232043.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221030232043.3">appBar: AppBar(
  title: Text('OrientationBuilderExample'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221030232043.4">body:
@others
</t>
<t tx="swot.20221030232118.1">OrientationBuilder(
  builder: (context, orientation) {
    if (orientation == Orientation.portrait) {
      return const Center(
        child: Text('Portrait'),
      );
    } else {
      return const Center(
        child: Text('Landscape'),
      );
    }
  },
),
</t>
<t tx="swot.20221030232506.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; OrientationBuilderExample(),
      ),
    );
  },
  child: const Text('OrientationBuilderExample'),
),

</t>
<t tx="swot.20221030232829.1"></t>
<t tx="swot.20221030232847.2">@language dart
@tabwidth -2
class OverflowBarExample extends StatelessWidget {
  const OverflowBarExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221030232847.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221030233137.2">Padding(
  padding: const EdgeInsets.all(8.0),
  child:
  @others
  )

</t>
<t tx="swot.20221030233211.1">OverflowBar(
  spacing: 8,
  children: [
    @others
  ],
)
</t>
<t tx="swot.20221030233258.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {},
  child: const Text('linux'),
),

</t>
<t tx="swot.20221030233342.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {},
  child: const Text('javascript'),
),

</t>
<t tx="swot.20221030233342.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {},
  child: const Text('flutter'),
),

</t>
<t tx="swot.20221030233533.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; OverflowBarExample(),
      ),
    );
  },
  child: const Text('OverflowBarExample'),
),
</t>
<t tx="swot.20221030233721.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221030233721.3">appBar: AppBar(
  title: Text('OverflowBarExample'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221030233721.4">body:
@others
</t>
<t tx="swot.20221030233809.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {},
  child: const Text('python'),
),

</t>
<t tx="swot.20221030233843.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {},
  child: const Text('dart'),
),

</t>
<t tx="swot.20221030234210.1"></t>
<t tx="swot.20221030234221.2">@language dart
@tabwidth -2
class FittedBoxExample extends StatelessWidget {
  const FittedBoxExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221030234221.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221030234303.2" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31302d33307103752e">Center(
  child:
  @others
)
</t>
<t tx="swot.20221031063239.2">Container(
  // height: 25,
  // width: 100,
  // width: 300,
  width: double.infinity,
  color: Colors.orangeAccent,
  child:
  @others
),
</t>
<t tx="swot.20221031063757.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; FittedBoxExample(),
      ),
    );
  },
  child: const Text('FittedBoxExample'),
),

</t>
<t tx="swot.20221031064454.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221031064454.3">appBar: AppBar(
  title: Text('FittedBoxExample'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221031064454.4">body:
@others
</t>
<t tx="swot.20221031070048.1">const FittedBox(
  child: Text(
    'This is a pretty long text',
    style: TextStyle(color: Colors.black),
  ),
),
</t>
<t tx="swot.20221031070401.1"></t>
<t tx="swot.20221031070602.2">@language dart
@tabwidth -2
class ExpansionTileExample extends StatefulWidget {
  const ExpansionTileExample({super.key});

  @override
  State&lt;ExpansionTileExample&gt; createState() =&gt; _ExpansionTileExampleState();
}

class _ExpansionTileExampleState extends State&lt;ExpansionTileExample&gt; {
  @others
}

</t>
<t tx="swot.20221031070602.3">bool _customIcon = false;
</t>
<t tx="swot.20221031070602.6">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221031073139.1">ExpansionTile(
  title: const Text('Expansion Tile -- custom icon'),
  trailing: Icon(
    _customIcon ? Icons.arrow_drop_down_circle : Icons.arrow_drop_down,
  ),
  children: const [
    ListTile(
      title: Text('This is tile number 2'),
    ),
  ],
  onExpansionChanged: (bool expanded) {
    setState(() {
      _customIcon = expanded;
    });
  },
),
</t>
<t tx="swot.20221031073947.1">ExpansionTileExample(),
Divider(),
</t>
<t tx="swot.20221031074310.1">ExpansionTile(
  title: const Text('Expansion Tile -- basic icon'),
  // trailing: Icon(
  // _customIcon ? Icons.arrow_drop_down_circle : Icons.arrow_drop_down,
  // ),
  children: const [
    ListTile(
      title: Text('This is tile number 2'),
    ),
    ListTile(
      title: Text('This is tile number 3'),
    ),
  ],
  onExpansionChanged: (bool expanded) {
    // setState(() {
    // _customIcon = expanded;
    // });
  },
),
</t>
<t tx="swot.20221031074359.2">Column(
  children: [
    @others
  ],
)
</t>
<t tx="swot.20221031074605.1">ExpansionTile(
  title: const Text('Expansion Tile -- basic icon'),
  onExpansionChanged: (bool expanded) {
    // setState(() {
    // _customIcon = expanded;
    // });
  },
  controlAffinity: ListTileControlAffinity.leading,
  // leading: const Icon(Icons.info),
  // trailing: Icon(
  // _customIcon ? Icons.arrow_drop_down_circle : Icons.arrow_drop_down,
  // ),
  children: const [
    ListTile(
      title: Text('This is tile number 2'),
    ),
  ], // icon location
),
</t>
<t tx="swot.20221031114906.1"></t>
<t tx="swot.20221031114947.2">@language dart
@tabwidth -2
class SearchDelegateExample extends StatefulWidget {
  const SearchDelegateExample({super.key});

  @override
  State&lt;SearchDelegateExample&gt; createState() =&gt; _SearchDelegateExampleState();
}

class _SearchDelegateExampleState extends State&lt;SearchDelegateExample&gt; {
  @others
}

</t>
<t tx="swot.20221031114947.3"></t>
<t tx="swot.20221031114947.6">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221031115107.2">Scaffold(
  @others
);
</t>
<t tx="swot.20221031115107.3">appBar: AppBar(
  title: Text('SearchDelegateExample'),
  elevation: 0.0,
  centerTitle: true,
  actions: [
    @others
  ],
),
</t>
<t tx="swot.20221031115107.4">body: null,
</t>
<t tx="swot.20221031115310.2">IconButton(
  icon: Icon(Icons.search),
  onPressed: () {
    showSearch(
      // call search
      context: context,
      delegate: CustomSearchDelegate(),
    );
  },
),
</t>
<t tx="swot.20221031115636.1">class CustomSearchDelegate extends SearchDelegate {
  List&lt;String&gt; searchTerms = [
    'Apple',
    'Banana',
    'Pear',
    'Watermelons',
    'Oranges',
    'Blueberries',
    'Strawberries',
    'Raspberries',
  ];

  @override
  List&lt;Widget&gt;? buildActions(BuildContext context) {
    return [
      IconButton(
        onPressed: () {
          query = '';
        },
        icon: const Icon(Icons.clear),
      )
    ];
  }

  @override
  Widget? buildLeading(BuildContext context) {
    return IconButton(
      onPressed: () {
        close(context, null);
      },
      icon: const Icon(Icons.arrow_back),
    );
  }

  @override
  Widget buildResults(BuildContext context) {
    List&lt;String&gt; matchQuery = [];
    for (var fruit in searchTerms) {
      if (fruit.toLowerCase().contains(query.toLowerCase())) {
        matchQuery.add(fruit);
      }
    }
    return ListView.builder(
      itemCount: matchQuery.length,
      itemBuilder: (context, index) {
        var result = matchQuery[index];
        return ListTile(
          title: Text(result),
        );
      },
    );
  }

  @override
  Widget buildSuggestions(BuildContext context) {
    List&lt;String&gt; matchQuery = [];
    for (var fruit in searchTerms) {
      if (fruit.toLowerCase().contains(query.toLowerCase())) {
        matchQuery.add(fruit);
      }
    }
    return ListView.builder(
      itemCount: matchQuery.length,
      itemBuilder: (context, index) {
        var result = matchQuery[index];
        return ListTile(
          title: Text(result),
        );
      },
    );
  }
}

</t>
<t tx="swot.20221031122837.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; SearchDelegateExample(),
      ),
    );
  },
  child: const Text('CustomSearchDelegate'),
),
</t>
<t tx="swot.20221031125101.1"></t>
<t tx="swot.20221031125115.1"></t>
<t tx="swot.20221031125205.1">很好的一篇实战文章 《Flutter之内置SearchDelegate -上》
https://mp.weixin.qq.com/s/eSVoyITisYYVqQI65agxxQ
</t>
<t tx="swot.20221031140355.1">SwitchListTile.adaptive(
  title: const Text('Switch List tile'),
  onChanged: (bool newValue) {},
  value: true,
),
</t>
<t tx="swot.20221031143119.1"></t>
<t tx="swot.20221031143139.2">@language dart
@tabwidth -2
class HeroExample2 extends StatelessWidget {
  const HeroExample2({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221031143139.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221031143419.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221031143419.3">appBar: AppBar(
  title: Text('HeroExample2'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221031143419.4">body:
@others
</t>
<t tx="swot.20221031143456.1">Hero(
  tag: 'tag-2',
  child: Image.asset('assets/fengjing.webp'),
),
</t>
<t tx="swot.20221031151733.1">GestureDetector(
  onTap: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; HeroExample2(),
      ),
    );
  },
  child: ClipRRect(
    child: Hero(
      tag: 'tag-2',
      child: Image.asset(
        'assets/fengjing.webp',
        width: 100,
      ),
    ),
  ),
)
</t>
<t tx="swot.20221031170952.1"></t>
<t tx="swot.20221031171010.2">@language dart
@tabwidth -2
class SliveAppBarExample extends StatefulWidget {
  const SliveAppBarExample({super.key});

  @override
  State&lt;SliveAppBarExample&gt; createState() =&gt; _SliveAppBarExampleState();
}

class _SliveAppBarExampleState extends State&lt;SliveAppBarExample&gt; {
  @others
}

</t>
<t tx="swot.20221031171010.6">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221031171922.2">Scaffold(
  @others
);
</t>
<t tx="swot.20221031171922.4">body:
    @others
</t>
<t tx="swot.20221031172002.1">CustomScrollView(
  slivers: [
    const SliverAppBar(
      title: Text('Flutter'),
      centerTitle: false,
      // pinned: true,
      floating: true,
      // snap: true,
      expandedHeight: 150.0,
      flexibleSpace: FlexibleSpaceBar(
        title: Text('Swot'),
        centerTitle: true,
      ),
    ),
    SliverList(
      delegate: SliverChildListDelegate([
        const Text(
          'SLIVER',
          style: TextStyle(fontSize: 600),
        ),
      ]),
    ),
  ],
),
</t>
<t tx="swot.20221031172540.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; SliveAppBarExample(),
      ),
    );
  },
  child: const Text('SliveAppBarExample'),
),
</t>
<t tx="swot.20221031182144.1"></t>
<t tx="swot.20221031182202.2">@language dart
@tabwidth -2
class RangeSliderExample extends StatefulWidget {
  const RangeSliderExample({super.key});

  @override
  State&lt;RangeSliderExample&gt; createState() =&gt; _RangeSliderExampleState();
}

class _RangeSliderExampleState extends State&lt;RangeSliderExample&gt; {
  @others
}

</t>
<t tx="swot.20221031182202.3">RangeValues values = const RangeValues(0.1, 0.5);
</t>
<t tx="swot.20221031182202.4">@override
void initState() {
  super.initState();
}

</t>
<t tx="swot.20221031182202.5">@override
void dispose() {
  super.dispose();
}

</t>
<t tx="swot.20221031182202.6">@override
Widget build(BuildContext context) {
  @others
}
</t>
<t tx="swot.20221031182439.1">RangeLabels labels = RangeLabels(
  values.start.toString(),
  values.end.toString(),
);
</t>
<t tx="swot.20221031182617.2">return Center(
  child:
      @others
);
</t>
<t tx="swot.20221031182643.1">RangeSlider(
  values: values,
  divisions: 8,
  labels: labels,
  onChanged: (newValues) {
    setState(() {
      values = newValues;
    });
  },
),
</t>
<t tx="swot.20221031182942.1">RangeSliderExample(),
</t>
<t tx="swot.20221031200617.1"></t>
<t tx="swot.20221031202343.2">@language dart
@tabwidth -2
class WillPopScopeExample extends StatelessWidget {
  const WillPopScopeExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221031202343.3">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221031202510.1">WillPopScope(
  onWillPop: () async {
    return false; // disable Android back button
    // return true;    // enable Android back button
  },
  child:
      @others
);
</t>
<t tx="swot.20221031202632.2">Scaffold(
  backgroundColor: Colors.blue,
  @others
),
</t>
<t tx="swot.20221031202632.3">appBar: AppBar(
  title: Text('WillPopScope'),
  leading: IconButton(
    onPressed: () {
      Navigator.pop(context);
    },
    icon: Icon(Icons.arrow_back_ios_new),
  ),
  elevation: 0.0,
  centerTitle: true,
  actions: [
    Icon(Icons.settings),
  ],
),
</t>
<t tx="swot.20221031202632.4">body: const Center(),
</t>
<t tx="swot.20221031202945.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; WillPopScopeExample(),
      ),
    );
  },
  child: const Text('WillPopScopeExample'),
),

</t>
<t tx="swot.20221031213407.1"></t>
<t tx="swot.20221031213433.2">@language dart
@tabwidth -2
class GridPaperExample extends StatelessWidget {
  const GridPaperExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221031213433.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221031213506.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221031213506.3">appBar: AppBar(
  title: Text('GridPaper'),
  // leading: Icon(Icons.menu),
  elevation: 0.0,
  centerTitle: true,
  actions: [
    Icon(Icons.settings),
  ],
),
</t>
<t tx="swot.20221031213506.4">body:
@others
</t>
<t tx="swot.20221031213547.1">const SizedBox(
  width: double.infinity,
  height: double.infinity,
  child:
  @others
)
</t>
<t tx="swot.20221031213653.1">GridPaper(
  color: Colors.pink,
  divisions: 2,
  interval: 200,
  subdivisions: 5,
)
</t>
<t tx="swot.20221031213940.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; GridPaperExample(),
      ),
    );
  },
  child: const Text('GridPaperExample'),
),

</t>
<t tx="swot.20221031220315.1"></t>
<t tx="swot.20221031220414.2">@language dart
@tabwidth -2
class TooltipExample extends StatelessWidget {
  const TooltipExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221031220414.3">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221031220639.2">Center(
  child:
      @others
);
</t>
<t tx="swot.20221031220649.1">Tooltip(
  message: 'Image message',
  child: Image.asset(
    width: 200,
    'assets/fengjing.webp',
  ),
)
</t>
<t tx="swot.20221031220908.1">TooltipExample(),
</t>
<t tx="swot.20221031222105.1"></t>
<t tx="swot.20221031222131.2">@language dart
@tabwidth -2
class SpreadOperatorExample extends StatelessWidget {
  const SpreadOperatorExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221031222131.3">@override
Widget build(BuildContext context) {
  @others
}
</t>
<t tx="swot.20221031222154.1">List&lt;Widget&gt; imagesList = [
  Image.asset(
    'assets/fengjing.webp',
    height: 50,
  ),
  Image.asset(
    'assets/fengjing.webp',
    height: 50,
  ),
  Image.asset(
    'assets/fengjing.webp',
    height: 50,
  ),
];
</t>
<t tx="swot.20221031225000.2">return Scaffold(
  @others
);
</t>
<t tx="swot.20221031225000.3">appBar: AppBar(
  title: Text('SpreadOperator'),
  // leading: Icon(Icons.menu),
  elevation: 0.0,
  centerTitle: true,
  actions: [
    Icon(Icons.settings),
  ],
),
</t>
<t tx="swot.20221031225000.4">body:
    @others
</t>
<t tx="swot.20221031225029.2">Column(
  children: [
    Image.asset('assets/avatar.webp'),
    SizedBox(height: 20.0),
    Column(children: imagesList),
    SizedBox(height: 20.0),
    ...imagesList, // same result with above Column
  ],
),
</t>
<t tx="swot.20221031225347.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; SpreadOperatorExample(),
      ),
    );
  },
  child: const Text('SpreadOperatorExample'),
),

</t>
<t tx="swot.20221031231855.1"></t>
<t tx="swot.20221031231919.2">@language dart
@tabwidth -2
class InkwellExample extends StatefulWidget {
  const InkwellExample({super.key});

  @override
  State&lt;InkwellExample&gt; createState() =&gt; _InkwellExampleState();
}

class _InkwellExampleState extends State&lt;InkwellExample&gt; {
  @others
}

</t>
<t tx="swot.20221031231919.3">Color boxColor = Colors.blue;
</t>
<t tx="swot.20221031231919.6">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221101062927.1">InkWell(
  onTap: () {
    setState(() { boxColor = Colors.blue; });
  },
  onDoubleTap: () {
    setState(() {
      boxColor = Colors.red;
    });
  },
  onLongPress: () {
    setState(() {
      boxColor = Colors.yellow;
    });
  },
  child: Ink(
    width: 100.0,
    height: 100.0,
    color: boxColor,
    child: const FlutterLogo(size: 100),
  ),
)
</t>
<t tx="swot.20221101063450.1">InkwellExample(),
</t>
<t tx="swot.20221101064424.1">@language dart
@tabwidth -2
class InteractiveViewerExample2 extends StatefulWidget {
  const InteractiveViewerExample2({super.key});

  @override
  State&lt;InteractiveViewerExample2&gt; createState() =&gt;
      _InteractiveViewerExample2State();
}

class _InteractiveViewerExample2State extends State&lt;InteractiveViewerExample2&gt; {
  @others
}

</t>
<t tx="swot.20221101064424.2">@override
Widget build(BuildContext context) {
  return Scaffold(
    appBar: AppBar(
      title: const Text('Scall'),
    ),
    body: Center(
      child: InteractiveViewer(
        maxScale: 5,
        child: Image.asset('assets/fengjing.webp'),
      ),
    ),
  );
}
</t>
<t tx="swot.20221101065031.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; InteractiveViewerExample2(),
      ),
    );
  },
  child: const Text('InteractiveViewerExample2'),
),

</t>
<t tx="swot.20221101072329.1">String selectedText = '';

final String _selectableText = 'This is a selectable text';

final TextStyle _styleBlue = const TextStyle(
  fontSize: 25,
  fontWeight: FontWeight.bold,
  color: Colors.blue,
);

final TextStyle _style = const TextStyle(
  fontSize: 25,
  fontWeight: FontWeight.bold,
);
</t>
<t tx="swot.20221101072843.2">Column(
  children: [
    @others
  ],
);
</t>
<t tx="swot.20221102101617.1"></t>
<t tx="swot.20221102101634.2">@language dart
@tabwidth -2
class DividerExample extends StatelessWidget {
  const DividerExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221102101634.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221102101649.1">const Divider(
  color: Colors.red,
  height: 20,
  thickness: 5,
  indent: 20,
  endIndent: 40,
),
</t>
<t tx="swot.20221102101920.2">Container(
  width: double.infinity,
  height: 200.0,
  color: Colors.orange,
),
</t>
<t tx="swot.20221102102110.1">Container(
  width: double.infinity,
  height: 200.0,
  color: Colors.orange,
),
</t>
<t tx="swot.20221102102136.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
    // backgroundColor: Colors.orangeAccent,
  ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; DividerExample(),
      ),
    );
  },
  child: const Text('DividerExample'),
),

</t>
<t tx="swot.20221102103050.2">Column(
  children: [
    @others
  ],
)
</t>
<t tx="swot.20221102103902.2">Scaffold(
  @others
)
</t>
<t tx="swot.20221102103902.3">appBar: AppBar(
  title: Text(''),
  // leading: Icon(Icons.menu),
  elevation: 0.0,
  centerTitle: true,
  actions: [
    Icon(Icons.settings),
  ],
),
</t>
<t tx="swot.20221102103902.4">body:
@others
</t>
<t tx="swot.20221110233027.1"></t>
<t tx="swot.20221110233138.2">@language dart
@tabwidth -2
class DropDownButtonExample extends StatefulWidget {
  const DropDownButtonExample({super.key});

  @override
  State&lt;DropDownButtonExample&gt; createState() =&gt; _DropDownButtonExampleState();
}

class _DropDownButtonExampleState extends State&lt;DropDownButtonExample&gt;{
  @others
}

</t>
<t tx="swot.20221110233138.3">List&lt;String&gt; items = [
  'Item 1',
  'Item 2',
  'Item 3',
  'Item 4',
];

String? selectedItem = 'Item 1';
</t>
<t tx="swot.20221110233138.4">@override
void initState() {
  super.initState();
}
</t>
<t tx="swot.20221110233138.5">@override
void dispose() {
  super.dispose();
}
</t>
<t tx="swot.20221110233138.6">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221110233541.2">DropdownButton(
  // hint: const Text("Filter by"),
  value: selectedItem,
  items: items.map((item) =&gt; DropdownMenuItem&lt;String&gt;(
    value: item,
    child: Text(item, style: const TextStyle(fontSize: 20),
    ),
  )).toList(),
  onChanged: (item) {
    setState(() {
      selectedItem = item;
    });
  },
),
</t>
<t tx="swot.20221110233828.1">DropDownButtonExample(),
</t>
<t tx="swot.20221111000057.1">SizedBox(
  width: 240,
  child:
  @others
),
</t>
<t tx="swot.20221111000936.2">Column(
  children: [
    @others
  ],
)
</t>
<t tx="swot.20221111001008.1">SizedBox(
  width: 240,
  child:
  @others
)
</t>
<t tx="swot.20221111001008.2">DropdownButtonFormField(
  decoration: InputDecoration(
    enabledBorder: OutlineInputBorder(
      borderRadius: BorderRadius.circular(12),
      borderSide: const BorderSide(width: 3, color: Colors.blue)
    )
  ),
  // hint: const Text("Filter by"),
  value: selectedItem,
  items: items.map((item) =&gt; DropdownMenuItem&lt;String&gt;(
    value: item,
    child: Text(item, style: const TextStyle(fontSize: 20),
    ),
  )).toList(),
  onChanged: (item) {
    setState(() {
      selectedItem = item;
    });
  },
),
</t>
<t tx="swot.20221111002547.1"></t>
<t tx="swot.20221111064532.1">final controller = PageController(initialPage: 1);  // Page 2
</t>
<t tx="swot.20221111064612.1">dispose() {
  super.dispose();
  controller.dispose();
}
</t>
<t tx="swot.20221111065157.2">IconButton(
  icon: const Icon(Icons.keyboard_arrow_left),
  onPressed: (){
    // controller.animateToPage(
      // 0,  // index 0 is the first page
      // duration: const Duration(seconds: 1),
      // curve: Curves.easeInOut,
    // );
    controller.previousPage(
      duration: const Duration(seconds: 1),
      curve: Curves.easeInOut,
    );
  },
),
</t>
<t tx="swot.20221111065339.1">IconButton(
  icon: const Icon(Icons.keyboard_arrow_right),
  onPressed: (){
    // controller.animateToPage(
      // 2,  // index 2 is the last page
      // duration: const Duration(seconds: 1),
      // curve: Curves.easeInOut,
    // );
    controller.nextPage(
      duration: const Duration(seconds: 1),
      curve: Curves.easeInOut,
    );
  },
),
</t>
<t tx="swot.20221111201724.1"></t>
<t tx="swot.20221111201811.2">@language dart
@tabwidth -2
class ExpansionPanelListExample extends StatefulWidget {
  const ExpansionPanelListExample({super.key});

  @override
  State&lt;ExpansionPanelListExample&gt; createState() =&gt; _ExpansionPanelListExampleState();
}

class _ExpansionPanelListExampleState extends State&lt;ExpansionPanelListExample&gt;{
  @others
}

</t>
<t tx="swot.20221111201811.3">static const loremIpsum = 'Officia elit et minim, est et lorem excepteur in et laborum velit. Id sit incididunt laborum fugiat ad est. Laborum non cillum ad in eu. Tempor aute consequat exercitation anim excepteur dolor nulla. Ea lorem ea proident consectetur proident.';

final List&lt;Item&gt; items = [
  Item(header: 'Panel 1', body: loremIpsum),
  Item(header: 'Panel 2', body: loremIpsum),
  Item(header: 'Panel 3', body: loremIpsum),
];
</t>
<t tx="swot.20221111201811.4">@override
void initState() {
  super.initState();
}
</t>
<t tx="swot.20221111201811.5">@override
void dispose() {
  super.dispose();
}
</t>
<t tx="swot.20221111201811.6">@override
Widget build(BuildContext context) {
  return
  @others
}
</t>
<t tx="swot.20221111202207.2">Scaffold(
  @others
);
</t>
<t tx="swot.20221111202207.3">appBar: AppBar(
  title: Text('ExpansionPanelListExample'),
),
</t>
<t tx="swot.20221111202207.4">body:
@others
</t>
<t tx="swot.20221111202707.2">SingleChildScrollView(
  child:
  @others
),
</t>
<t tx="swot.20221111202728.1">ExpansionPanelList.radio(
  children: items.map(
    (item) =&gt; ExpansionPanelRadio(
      canTapOnHeader: true,
      value: item.header,  // has to be unique!
      headerBuilder: (context, isExpanded) =&gt; ListTile(
        title: Text(
          item.header,
          style: const TextStyle(fontSize: 20),
        ),
      ),
      body: ListTile(
        title: Text(
          item.body,
          style: const TextStyle(fontSize: 16),
        ),
      ),
    ),
  ).toList(),
),
</t>
<t tx="swot.20221111204125.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
    // backgroundColor: Colors.orangeAccent,
  ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; ExpansionPanelListExample(),
      ),
    );
  },
  child: const Text('ExpansionPanelListExample'),
),

</t>
<t tx="swot.20221111204854.1">class Item {
  final String header;
  final String body;
  bool isExpanded;

  Item({
    required this.header,
    required this.body,
    this.isExpanded = false,
  });
}
</t>
<t tx="swot.20221111212929.1">// ExpansionPanelList.radio(
ExpansionPanelList(
  expansionCallback: (index, isExpanded) {
    setState(() {
      items[index].isExpanded = !isExpanded;
    });
  },
  children: items.map(
    // (item) =&gt; ExpansionPanelRadio(
    (item) =&gt; ExpansionPanel(
      canTapOnHeader: true,
      // value: item.header,  // has to be unique!
      isExpanded: item.isExpanded,
      headerBuilder: (context, isExpanded) =&gt; ListTile(
        title: Text(
          item.header,
          style: const TextStyle(fontSize: 20),
        ),
      ),
      body: ListTile(
        title: Text(
          item.body,
          style: const TextStyle(fontSize: 16),
        ),
      ),
    ),
  ).toList(),
),
</t>
<t tx="swot.20221111213642.2">Column(
  children: [
    @others
  ],
)
</t>
<t tx="swot.20221111213817.1">Text(
  'Radio',
  style: TextStyle(fontSize: 20),
),
</t>
<t tx="swot.20221111214154.1">Text(
  'Multiple',
  style: TextStyle(fontSize: 20),
),
</t>
<t tx="swot.20221111214514.1">SizedBox(height: 20.0),
</t>
<t tx="swot.20221111222446.1">const TabBar(
  tabs: [
    Tab(text: 'Tab 1', icon: Icon(Icons.home)),
    Tab(text: 'Tab 2', icon: Icon(Icons.settings)),
    Tab(text: 'Tab 3', icon: Icon(Icons.person)),
  ],
),
</t>
<t tx="swot.20221112114354.1"></t>
<t tx="swot.20221112175512.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">TextFormField(
  @others
),
</t>
<t tx="swot.20221112175530.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">ElevatedButton(
  @others
  child: const Text('Validate'),
),
</t>
<t tx="swot.20221112180550.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">TextFormField(
  @others
),
</t>
<t tx="swot.20221112180604.1">const SizedBox(height: 10),
</t>
<t tx="swot.20221112180616.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">Card(
  child: Padding(
    padding: const EdgeInsets.all(8.0),
    child: Text(titles[index]),
  ),
),
</t>
<t tx="swot.20221112180710.1">List.generate(3, (int index) {
  return Padding(
    padding: const EdgeInsets.all(20.0),
    child: Column(
      mainAxisSize: MainAxisSize.min,
      children: [
        @others
      ],
    ),
  );
}),
</t>
<t tx="swot.20221112181907.1">validator: (value) {
  if (value == null || value.isEmpty) {
    return 'Enter something';
  }
  return null;
},
</t>
<t tx="swot.20221112182043.1">onPressed: () {
  if (_formKey.currentState!.validate()) {
    @others
  }
},
</t>
<t tx="swot.20221112182228.1">ScaffoldMessenger.of(context).showSnackBar(
  const SnackBar(
    content: Text('Great!'),
  ),
);
</t>
<t tx="swot.20221112182519.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">onSaved: (String? value) {
  if (value != null) {
    titles[index] = value;
    print('index: $index');  // will print all index: 0,1,2
  }
},
</t>
<t tx="swot.20221112184234.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">// TextFormField changed then call onSaved()
onChanged: () {
  setState(() {
    Form.of(primaryFocus!.context!)!.save();
  });
},
</t>
<t tx="swot.20221112184709.1">child:
    @others
</t>
<t tx="swot.20221112203550.1"></t>
<t tx="swot.20221113174340.1">@language asciidoc
:nofooter:
https://www.flutterbeads.com/numeric-input-keyboard-in-flutter/

@language dart
import 'package:flutter/material.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

@language asciidoc
.TextField: number &amp; decimal
image:image/FlutterWidget/number.png[,200]
image:image/FlutterWidget/decimal.png[,200]

.TextField: phone &amp; done
image:image/FlutterWidget/phone.png[,200]
image:image/FlutterWidget/done.png[,200]

.TextField: number/decimal/done &amp; phone
image:image/FlutterWidget/number2.png[,200]
image:image/FlutterWidget/phone2.png[,200]
</t>
<t tx="swot.20221113174434.2">@language dart
@tabwidth -2
class TextFieldExample extends StatelessWidget {
  const TextFieldExample({ Key? key }) : super(key: key);
  @others
}
</t>
<t tx="swot.20221113174434.3">@override
Widget build(BuildContext context) {
  return
  @others
}
</t>
<t tx="swot.20221113180505.1">GestureDetector(
  onTap: () {
    FocusManager.instance.primaryFocus?.unfocus();
  },
  child:
  @others
);
</t>
<t tx="swot.20221113180641.1">Scaffold(
  @others
),
</t>
<t tx="swot.20221113180931.1">appBar: AppBar(
  centerTitle: true,
  title: Row(
    mainAxisAlignment: MainAxisAlignment.center,
    children: [
      // Image.asset(
        // 'assets/images/logo.png',
        // scale: 12,
      // ),
      // const SizedBox(
        // width: 10,
      // ),
      const Text(
        'FlutterBeads',
        style: TextStyle(color: Colors.black),
      ),
    ],
  ),
  backgroundColor: const Color(0xff6ae792),
),
</t>
<t tx="swot.20221113181008.1">@language dart
@tabwidth -2
body: Column(
  children: [
    @others
  ],
),
</t>
<t tx="swot.20221113181132.1">@language dart
@tabwidth -2
TextField(
  decoration: InputDecoration(labelText: 'Enter Number'),
  keyboardType: TextInputType.number,
  inputFormatters: [FilteringTextInputFormatter.digitsOnly],
),
</t>
<t tx="swot.20221113181152.1">@language dart
@tabwidth -2
TextField(
  decoration: InputDecoration(labelText: 'Enter Decimal value'),
  keyboardType: TextInputType.numberWithOptions(decimal: true),
  inputFormatters: [
    FilteringTextInputFormatter.allow(RegExp('[0-9.,]')),
  ],
),
</t>
<t tx="swot.20221113181202.1">@language dart
@tabwidth -2
TextField(
  decoration: InputDecoration(labelText: 'Enter phone number'),
  keyboardType: TextInputType.phone,
),
</t>
<t tx="swot.20221113181209.1">@language dart
@tabwidth -2
TextField(
  decoration: InputDecoration(labelText: 'Enter Number'),
  keyboardType: defaultTargetPlatform == TargetPlatform.iOS
      ? TextInputType.numberWithOptions(decimal: true, signed: true)
      : TextInputType.number,
  inputFormatters: [FilteringTextInputFormatter.digitsOnly],
),
</t>
<t tx="swot.20221113181739.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
    // backgroundColor: Colors.orangeAccent,
  ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; TextFieldExample(),
      ),
    );
  },
  child: const Text('TextFieldExample'),
),
Divider(),
</t>
<t tx="swot.20221114192038.1">@language asciidoc
:nofooter:
https://www.flutterbeads.com/wrap-text-on-overflow-in-flutter/#Full-Code/?[
How to Wrap Text on Overflow in Flutter]

image::image/FlutterWidget/longtext.png[,240]

</t>
<t tx="swot.20221114192153.2">@language dart
@tabwidth -2
class TextExample extends StatelessWidget {
  const TextExample({ Key? key }) : super(key: key);
  @others
}
</t>
<t tx="swot.20221114192153.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221114192542.1">GestureDetector(
  onTap: () {
    FocusManager.instance.primaryFocus?.unfocus();
  },
  child:
  @others
)
</t>
<t tx="swot.20221114193002.1">Scaffold(
  @others
),
</t>
<t tx="swot.20221114193106.1">appBar: AppBar(
  centerTitle: true,
  title: Row(
    mainAxisAlignment: MainAxisAlignment.center,
    children: [
      // Image.asset(
        // 'assets/images/logo.png',
        // scale: 12,
      // ),
      FlutterLogo(),
      const SizedBox(
        width: 10,
      ),
      const Text(
        'Swotpp',
        style: TextStyle(color: Colors.black),
      ),
    ],
  ),
  backgroundColor: const Color(0xff6ae792),
),
</t>
<t tx="swot.20221114193135.1">body:
@others
</t>
<t tx="swot.20221114195006.2">@language dart
ElevatedButton(
  style: ElevatedButton.styleFrom(
    // backgroundColor: Colors.orangeAccent,
  ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; TextExample(),
      ),
    );
  },
  child: const Text('TextExample'),
),

</t>
<t tx="swot.20221114195436.1">Row(
  children: const [
    Expanded(
      child: Text(
        'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.',
        style: TextStyle(fontSize: 58),
        softWrap: false,
        maxLines: 2,
        overflow: TextOverflow.ellipsis,
      ),
    ),
  ],
),

</t>
<t tx="swot.20221114195444.1">Row(
  children: const [
    Expanded(
      child: Text(
        'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.',
        style: TextStyle(fontSize: 58),
        softWrap: true,
        maxLines: 1,
        overflow: TextOverflow.fade,
      ),
    ),
  ],
),

</t>
<t tx="swot.20221114195452.1">@language dart
@tabwidth -2
Row(
  children: const [
    Expanded(
      child: FittedBox(
        child: Text(
          'It is a long established text.',
          style: TextStyle(fontSize: 58),
          softWrap: false,
          overflow: TextOverflow.ellipsis,
        ),
      ),
    ),
  ],
),
</t>
<t tx="swot.20221114202206.1">Column(
  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
  children: [
    @others
  ],
),
</t>
<t tx="swot.20221114202534.2">const Divider(
  color: Colors.red,
  height: 20,
  thickness: 3,
  // indent: 20,
  // endIndent: 40,
),
</t>
<t tx="swot.20221114204245.1">Row(
  children: const [
    Expanded(
      child: Text(
        'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.',
        style: TextStyle(fontSize: 58),
        softWrap: true,
        maxLines: 2,
        overflow: TextOverflow.fade,
      ),
    ),
  ],
),

</t>
<t tx="swot.20221115221134.2">Container(
  margin: EdgeInsets.symmetric(vertical: 5.0),
  child:
  @others
)
</t>
<t tx="swot.20221115221203.1">Autocomplete&lt;String&gt;(
  optionsBuilder: (TextEditingValue textEditingValue) {
    // user input value
    if (textEditingValue.text == '') {
      return const Iterable&lt;String&gt;.empty();
    }
    return listItems.where((String item) {
      return item.contains(textEditingValue.text.toLowerCase());
    });
  },
  onSelected: (String item) {
    print('The $item was selected');
  },
),
</t>
</tnodes>
</leo_file>
