<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2"/>
<globals/>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="swot.20221017093031.1"><vh>widgets</vh>
<v t="swot.20221017093031.2" descendentVnodeUnknownAttributes="7d7100285805000000302e322e3271017d71025808000000616e6e6f7461746571037d71042858080000007072696f7269747971054d0f27580a000000707269736574646174657106580a000000323032322d31302d323371077573580d000000302e332e302e302e302e312e3171087d710968037d710a2858080000007072696f72697479710b4d0f27580a00000070726973657464617465710c580a000000323032322d31302d3236710d75735811000000302e342e302e332e312e302e302e302e30710e7d710f68037d71102858080000007072696f7269747971114d0f27580a000000707269736574646174657112580a000000323032322d31302d323571137573580d000000302e342e312e322e312e302e3071147d711568037d71162858080000007072696f7269747971174d0f27580a000000707269736574646174657118580a000000323032322d31302d323371197573580f000000302e342e312e322e312e302e302e30711a7d711b68037d711c2858080000007072696f72697479711d4d0f27580a00000070726973657464617465711e580a000000323032322d31302d3233711f7573752e"><vh>@file lib/main.dart</vh></v>
<v t="swot.20221114225716.1" descendentVnodeUnknownAttributes="7d710028580d000000302e362e302e302e302e312e3071017d71025808000000616e6e6f7461746571037d71042858080000007072696f7269747971054d0f27580a000000707269736574646174657106580a000000323032322d31302d3330710775735811000000302e362e322e312e302e312e302e302e3071087d710968037d710a2858080000007072696f72697479710b4d0f27580a00000070726973657464617465710c580a000000323032322d31312d3132710d75735811000000302e362e322e312e302e312e302e302e31710e7d710f68037d71102858080000007072696f7269747971114d0f27580a000000707269736574646174657112580a000000323032322d31312d3132711375735805000000302e362e3671147d71155808000000616e6e6f7461746571167d71172858080000007072696f7269747971184d0f27580a000000707269736574646174657119580a000000323032322d31312d3136711a75735810000000302e31372e352e312e302e312e302e30711b7d711c68037d711d2858080000007072696f72697479711e4d0f27580a00000070726973657464617465711f580a000000323032322d31312d3132712075735812000000302e31372e352e312e302e312e302e302e3071217d712268037d71232858080000007072696f7269747971244d0f27580a000000707269736574646174657125580a000000323032322d31312d3132712675735818000000302e31372e352e312e302e312e302e302e312e302e302e3071277d712868037d71292858080000007072696f72697479712a4d0f27580a00000070726973657464617465712b580a000000323032322d31312d3132712c7573581a000000302e31372e352e312e302e312e302e302e312e302e302e302e30712d7d712e68037d712f2858080000007072696f7269747971304d0f27580a000000707269736574646174657131580a000000323032322d31312d3132713275735818000000302e31372e352e312e302e312e302e302e312e302e302e3271337d713468037d71352858080000007072696f7269747971364d0f27580a000000707269736574646174657137580a000000323032322d31312d313271387573752e"><vh>@file lib/alphabet.dart</vh></v>
<v t="swot.20221114222958.1"><vh>@file lib/composite.dart</vh></v>
<v t="swot.20221114214205.1"><vh>@file lib/functionality.dart</vh></v>
<v t="swot.20221027203033.1"><vh>@file pubspec.yaml</vh></v>
<v t="swot.20221017093031.150"><vh>@auto-md README.md</vh></v>
</v>
<v t="swot.20221031125101.1"><vh>Similar Example</vh>
<v t="swot.20221111002547.1"><vh>Button -- popup &amp; dropdown</vh>
<v t="swot.20221025114730.2"><vh>PopupMenuButtonExample</vh>
<v t="swot.20221025114730.3"><vh>varible</vh></v>
<v t="swot.20221025114730.6"><vh>build()</vh></v>
</v>
<v t="swot.20221110233138.2"><vh>DropDownButtonExample</vh>
<v t="swot.20221110233138.3"><vh>varible</vh></v>
<v t="swot.20221110233138.6"><vh>build()</vh>
<v t="swot.20221118180810.2"><vh>Scaffold</vh>
<v t="swot.20221118180810.3"><vh>appBar</vh></v>
<v t="swot.20221118180810.4"><vh>body</vh>
<v t="swot.20221118181453.2"><vh>Center</vh>
<v t="swot.20221111000936.2"><vh>Column</vh>
<v t="swot.20221111000057.1"><vh>SizedBox -- default</vh>
<v t="swot.20221110233541.2"><vh>DropdownButton !!!</vh></v>
</v>
<v t="swot.20221118192811.1"><vh>SizedBox height: 20.0</vh></v>
<v t="swot.20221118181746.1"><vh>Change dropdown button color</vh>
<v t="swot.20221118181936.2"><vh>Container !!!</vh>
<v t="swot.20221118181835.1"><vh>DropdownButton</vh></v>
</v>
</v>
<v t="swot.20221118183336.1"><vh>SizedBox height: 20.0</vh></v>
<v t="swot.20221118182834.1"><vh>Change dropdown arrow color</vh>
<v t="swot.20221118183034.2"><vh>DropdownButton</vh>
<v t="swot.20221118183205.1"><vh>icon !!!</vh></v>
</v>
</v>
<v t="swot.20221118183819.1"><vh>SizedBox height: 20.0</vh></v>
<v t="swot.20221118183443.1"><vh>Change the dropdown menu item background color</vh>
<v t="swot.20221118183642.1"><vh>DropdownButton</vh>
<v t="swot.20221118183705.1"><vh>dropdownColor !!!</vh></v>
</v>
</v>
<v t="swot.20221118184337.1"><vh>SizedBox height: 20.0</vh></v>
<v t="swot.20221118184332.1"><vh>Change the dropdown menu text color</vh>
<v t="swot.20221118184426.1"><vh>DropdownButton</vh>
<v t="swot.20221118191553.1"><vh>style</vh></v>
</v>
</v>
<v t="swot.20221118191949.1"><vh>SizedBox height: 20.0</vh></v>
<v t="swot.20221118192210.1"><vh>Changing the underline color of dropdown</vh>
<v t="swot.20221118192452.1"><vh>DropdownButton</vh>
<v t="swot.20221118192536.1"><vh>underline</vh></v>
</v>
</v>
<v t="swot.20221118192427.1"><vh>SizedBox height: 20.0</vh></v>
<v t="swot.20221118192421.1"><vh>Change the color of selected text in the dropdown</vh>
<v t="swot.20221118193132.1"><vh>DropdownButton</vh>
<v t="swot.20221118193317.1"><vh>selectedItemBuilder</vh></v>
</v>
</v>
<v t="swot.20221118192811.1"></v>
<v t="swot.20221118192831.1"><vh>SizedBox -- FormField</vh>
<v t="swot.20221118192831.2"><vh>DropdownButtonFormField !!!</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221112114354.1"><vh>Form</vh>
<v t="swot.20221027115609.1"><vh>FormExample</vh>
<v t="swot.20221027121244.1"><vh>show FormExample</vh></v>
<v t="swot.20221027115627.2"><vh>FormExample</vh>
<v t="swot.20221027120023.1"><vh>value</vh></v>
<v t="swot.20221027115627.3"><vh>build()</vh>
<v t="swot.20221027115750.2"><vh>Scaffold</vh>
<v t="swot.20221027115750.3"><vh>appBar</vh></v>
<v t="swot.20221027115750.4"><vh>body</vh>
<v t="swot.20221027115911.1"><vh>Padding</vh>
<v t="swot.20221027115952.1"><vh>Form !!! -- _formKey</vh>
<v t="swot.20221112175512.1"><vh>TextFormField</vh>
<v t="swot.20221112181907.1"><vh>2) validator !!!</vh></v>
</v>
<v t="swot.20221112175530.1"><vh>ElevatedButton</vh>
<v t="swot.20221112182043.1"><vh>1) onPressed !!! _formKey.currentState!.validate()</vh>
<v t="swot.20221112182228.1"><vh>3) showSnackBar</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221027182452.1"><vh>TextFormFieldExample</vh>
<v t="swot.20221027182544.1"><vh>show TextFormFieldExample</vh></v>
<v t="swot.20221027175533.2"><vh>TextFormFieldExample</vh>
<v t="swot.20221027175533.3"><vh>varible</vh></v>
<v t="swot.20221027175533.6"><vh>build()</vh>
<v t="swot.20221027183133.2"><vh>Scaffold</vh>
<v t="swot.20221027183133.3"><vh>appBar</vh></v>
<v t="swot.20221027183133.4"><vh>body</vh>
<v t="swot.20221027180846.1"><vh>SingleChildScrollView</vh>
<v t="swot.20221027180945.1"><vh>Form</vh>
<v t="swot.20221112184234.1"><vh>2) onChanged !!! Form.of(primaryFocus!.context!).save -&gt; setState(() {})</vh></v>
<v t="swot.20221112184709.1"><vh>child</vh>
<v t="swot.20221027182206.1"><vh>Column</vh>
<v t="swot.20221112180710.1"><vh>List.generate</vh>
<v t="swot.20221112180550.1"><vh>1) TextFormField input string</vh>
<v t="swot.20221112182519.1"><vh>3) onSaved !!! titles[index] = value</vh></v>
</v>
<v t="swot.20221112180604.1"><vh>SizedBox</vh></v>
<v t="swot.20221112180616.1"><vh>4) Card !!! titles[index]</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221113174340.1"><vh>TextFieldExample</vh>
<v t="swot.20221113181739.2"><vh>ElevatedButton -- show TextFieldExample</vh></v>
<v t="swot.20221113174434.2"><vh>TextFieldExample</vh>
<v t="swot.20221113174434.3"><vh>build()</vh>
<v t="swot.20221113180505.1"><vh>GestureDetector -- unfocus()</vh>
<v t="swot.20221113180641.1"><vh>Scaffold</vh>
<v t="swot.20221113180931.1"><vh>appBar</vh></v>
<v t="swot.20221113181008.1"><vh>body</vh>
<v t="swot.20221113181132.1"><vh>TextField -- number</vh></v>
<v t="swot.20221113181152.1"><vh>TextField -- decimal</vh></v>
<v t="swot.20221113181202.1"><vh>TextField -- phone</vh></v>
<v t="swot.20221113181209.1"><vh>TextField -- done</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221031125115.1"><vh>Search</vh>
<v t="swot.20221017093031.256"><vh>AutoCompleteExample -- should not locate at bottom (will be shield by keyboard)</vh>
<v t="swot.20221017093031.257"><vh>varible</vh></v>
<v t="swot.20221017093031.258"><vh>build()</vh>
<v t="swot.20221115221134.2"><vh>Container</vh>
<v t="swot.20221115221203.1"><vh>Autocomplete</vh></v>
</v>
</v>
</v>
<v t="swot.20221031114906.1"><vh>SearchDelegateExample</vh>
<v t="swot.20221031122837.2"><vh>ElevatedButton -- show SearchDelegateExample</vh></v>
<v t="swot.20221031115636.1"><vh>CustomSearchDelegate</vh></v>
<v t="swot.20221031114947.2"><vh>SearchDelegateExample</vh>
<v t="swot.20221031114947.3"><vh>varible</vh></v>
<v t="swot.20221031114947.6"><vh>build()</vh>
<v t="swot.20221031115107.2"><vh>Scaffold</vh>
<v t="swot.20221031115107.3"><vh>appBar</vh>
<v t="swot.20221031115310.2"><vh>IconButton !!!</vh></v>
</v>
<v t="swot.20221031115107.4"><vh>body</vh></v>
</v>
</v>
</v>
</v>
<v t="swot.20221031125205.1"><vh>Waiting learing</vh></v>
</v>
<v t="swot.20221112203550.1"><vh>XListTile</vh>
<v t="swot.20221017093031.153"><vh>AboutListTile</vh></v>
<v t="swot.20221031140355.1"><vh>SwitchListTile.adaptive</vh></v>
<v t="swot.20221029133717.1"><vh>ListTile</vh></v>
<v t="swot.20221022141927.1"><vh>CheckboxListTileExample</vh>
<v t="swot.20221022142602.1"><vh>show CheckboxListTileExample</vh></v>
<v t="swot.20221022141946.2"><vh>CheckboxListTileExample</vh>
<v t="swot.20221022142005.1"><vh>varible</vh></v>
<v t="swot.20221022141946.5"><vh>build()</vh>
<v t="swot.20221022142124.1"><vh>CheckboxListTile</vh></v>
</v>
</v>
</v>
<v t="swot.20221030083029.1"><vh>RadioListTileExample</vh>
<v t="swot.20221030084137.1"><vh>show RadioListTileExample</vh></v>
<v t="swot.20221030084432.1"><vh>radioListTileOptions</vh></v>
<v t="swot.20221030083241.2"><vh>RadioListTileExample</vh>
<v t="swot.20221030083241.3"><vh>varible</vh></v>
<v t="swot.20221030083241.6"><vh>build()</vh>
<v t="swot.20221030083721.2"><vh>Column</vh>
<v t="swot.20221030083736.1"><vh>RadioListTile</vh></v>
<v t="swot.20221030084017.1"><vh>RadioListTile</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="swot.20221027213439.1"><vh>@spot</vh></v>
</vnodes>
<tnodes>
<t tx="swot.20221017093031.1">Every Flutter Widgets - Part One - 50 Widgets
https://www.youtube.com/watch?v=P3LzkpHBcnI&amp;list=PL82uaKJraAILRBFE1XhCyfvu-Fclc6vv1&amp;index=1&amp;ab_channel=FlutterMapp

TOP 70 Flutter Widgets EVER (Only For Pro)
https://www.youtube.com/watch?v=G1LGOH424lo

Top 35 Flutter Widgets
https://www.youtube.com/watch?v=M9J-JJOuyE0

</t>
<t tx="swot.20221017093031.153">@doc
@language asciidoc
:nofooter:
image::image/FlutterWidget/AboutListTile.png[AboutListTile,240]
@c
@language dart
AboutListTile(
  icon: Icon(Icons.info_outline),
  applicationIcon: FlutterLogo(),
  applicationLegalese: 'Legalese',
  applicationName: 'ListTile',
  applicationVersion: 'version 1.0.0',
  aboutBoxChildren: [
    Text('This is a text created by Flutter'),
  ],
),
</t>
<t tx="swot.20221017093031.256">@language dart
@tabwidth -2
class AutoCompleteExample extends StatelessWidget {
  const AutoCompleteExample({Key? key}) : super(key: key);
  @others
}
</t>
<t tx="swot.20221017093031.257">static const List&lt;String&gt; listItems = &lt;String&gt;[
  'apple',
  'banana',
  'melon',
];
</t>
<t tx="swot.20221017093031.258">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221022141927.1"></t>
<t tx="swot.20221022141946.2">@language dart
@tabwidth -2
class CheckboxListTileExample extends StatefulWidget {
  const CheckboxListTileExample({super.key});

  @override
  State&lt;CheckboxListTileExample&gt; createState() =&gt;
      _CheckboxListTileExampleState();
}

class _CheckboxListTileExampleState extends State&lt;CheckboxListTileExample&gt; {
  @others
}

</t>
<t tx="swot.20221022141946.5">@override
Widget build(BuildContext context) {
  return Center(
    child:
    @others
  );
}
</t>
<t tx="swot.20221022142005.1">bool? _isChecked = false;
</t>
<t tx="swot.20221022142124.1">CheckboxListTile(
  title: const Text('Checkbox List Tile'),
  value: _isChecked,
  activeColor: Colors.orangeAccent,
  checkColor: Colors.white,
  tileColor: Colors.black12,
  subtitle: const Text('This is a subtitle'),
  controlAffinity: ListTileControlAffinity.leading,
  tristate: true,
  onChanged: (bool? newValue) {
    setState(() {
      _isChecked = newValue;
    });
  },
),
</t>
<t tx="swot.20221022142602.1">CheckboxListTileExample(),
Divider(),
</t>
<t tx="swot.20221025114730.2">@language dart
@tabwidth -2
class PopupMenuButtonExample extends StatefulWidget {
  const PopupMenuButtonExample({super.key});

  @override
  State&lt;PopupMenuButtonExample&gt; createState() =&gt; _PopupMenuButtonExampleState();
}

class _PopupMenuButtonExampleState extends State&lt;PopupMenuButtonExample&gt; {
  @others
}

</t>
<t tx="swot.20221025114730.3">String title = 'PopupMenuButton';
String item1 = 'First item';
String item2 = 'Second item';
</t>
<t tx="swot.20221025114730.6">@override
Widget build(BuildContext context) {
  return ListTile(
    title: Text(title),
    trailing: PopupMenuButton(
      itemBuilder: (context) =&gt; [
        PopupMenuItem(
          value: item1,
          child: Text(item1),
        ),
        PopupMenuItem(
          value: item2,
          child: Text(item2),
        ),
      ],
      onSelected: (String newValue) {
        setState(() {
          title = newValue;
        });
      },
    ),
  );
}
</t>
<t tx="swot.20221027115609.1">@language asciidoc
:nofooter:
.FormExample
image:image/FlutterWidget/FormExample1.png[,200]
image:image/FlutterWidget/FormExample2.png[,200]
</t>
<t tx="swot.20221027115627.2">@language dart
@tabwidth -2
class FormExample extends StatelessWidget {
  FormExample({Key? key}) : super(key: key);
  @others
}

</t>
<t tx="swot.20221027115627.3">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221027115750.2">Scaffold(
  @others
)

</t>
<t tx="swot.20221027115750.3">appBar: AppBar(
  title: Text('FormExample'),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221027115750.4">body:
@others
</t>
<t tx="swot.20221027115911.1">Padding(
  padding: const EdgeInsets.all(8.0),
  child:
  @others
),
</t>
<t tx="swot.20221027115952.1">Form(
  key: _formKey,
  child: Column(
    children: [
      @others
    ],
  ),
),
</t>
<t tx="swot.20221027120023.1">final _formKey = GlobalKey&lt;FormState&gt;();
</t>
<t tx="swot.20221027121244.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('FormExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; FormExample(),
      ),
    );
  },
),

</t>
<t tx="swot.20221027175533.2">@language dart
@tabwidth -2
class TextFormFieldExample extends StatefulWidget {
  const TextFormFieldExample({super.key});

  @override
  State&lt;TextFormFieldExample&gt; createState() =&gt; _TextFormFieldExampleState();
}

class _TextFormFieldExampleState extends State&lt;TextFormFieldExample&gt; {
  @others
}

</t>
<t tx="swot.20221027175533.3">List&lt;String&gt; titles = [
  '',
  '',
  '',
];
</t>
<t tx="swot.20221027175533.6">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221027180846.1">SingleChildScrollView(
  child:
      @others
),
</t>
<t tx="swot.20221027180945.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">Form(
  autovalidateMode: AutovalidateMode.always,
  @others
),
</t>
<t tx="swot.20221027182206.1">Column(
  mainAxisSize: MainAxisSize.min,
  children:
  @others
),
</t>
<t tx="swot.20221027182452.1">@language asciidoc
:nofooter:
.TextFormField
image::image/FlutterWidget/TextFormField.png[,300]
</t>
<t tx="swot.20221027182544.1">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  child: const Text('TextFormFieldExample'),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; const TextFormFieldExample(),
      ),
    );
  },
),
Divider(),
</t>
<t tx="swot.20221027183133.2">Scaffold(
  @others
);
</t>
<t tx="swot.20221027183133.3">appBar: AppBar(
  title: Text('TextFormField'),
  // leading: Icon(Icons.menu),
  actions: [
    Icon(Icons.settings),
  ],
  elevation: 0.0,
  centerTitle: true,
),
</t>
<t tx="swot.20221027183133.4">body:
    @others
</t>
<t tx="swot.20221027213439.1">for node in p.children():
  print(node.h);
</t>
<t tx="swot.20221029133717.1">ListTile(
  tileColor: Colors.orangeAccent,
  leading: const Icon(Icons.person),
  title: const Text('Flutter App'),
  trailing: const Icon(Icons.menu),
  onTap: () {},
)
</t>
<t tx="swot.20221030083029.1"></t>
<t tx="swot.20221030083241.2">@language dart
@tabwidth -2
class RadioListTileExample extends StatefulWidget {
  const RadioListTileExample({super.key});

  @override
  State&lt;RadioListTileExample&gt; createState() =&gt; _RadioListTileExampleState();
}

class _RadioListTileExampleState extends State&lt;RadioListTileExample&gt; {
  @others
}

</t>
<t tx="swot.20221030083241.3">String currentOption = radioListTileOptions[0];
</t>
<t tx="swot.20221030083241.6">@override
Widget build(BuildContext context) {
  return
      @others
      ;
}
</t>
<t tx="swot.20221030083721.2">Column(
  mainAxisSize: MainAxisSize.min,
  children: [
    @others
  ],
)

</t>
<t tx="swot.20221030083736.1">RadioListTile(
  title: const Text('Option 1'),
  value: radioListTileOptions[0],
  groupValue: currentOption,
  onChanged: (value) {
    setState(() {
      currentOption = value.toString();
    });
  },
),
</t>
<t tx="swot.20221030084017.1">RadioListTile(
  title: const Text('Option 2'),
  value: radioListTileOptions[1],
  groupValue: currentOption,
  onChanged: (value) {
    setState(() {
      currentOption = value.toString();
    });
  },
),
</t>
<t tx="swot.20221030084137.1">RadioListTileExample(),
</t>
<t tx="swot.20221030084432.1">List&lt;String&gt; radioListTileOptions = ['Option 1', 'Option 2'];

</t>
<t tx="swot.20221031114906.1"></t>
<t tx="swot.20221031114947.2">@language dart
@tabwidth -2
class SearchDelegateExample extends StatefulWidget {
  const SearchDelegateExample({super.key});

  @override
  State&lt;SearchDelegateExample&gt; createState() =&gt; _SearchDelegateExampleState();
}

class _SearchDelegateExampleState extends State&lt;SearchDelegateExample&gt; {
  @others
}

</t>
<t tx="swot.20221031114947.3"></t>
<t tx="swot.20221031114947.6">@override
Widget build(BuildContext context) {
  return
      @others
}
</t>
<t tx="swot.20221031115107.2">Scaffold(
  @others
);
</t>
<t tx="swot.20221031115107.3">appBar: AppBar(
  title: Text('SearchDelegateExample'),
  elevation: 0.0,
  centerTitle: true,
  actions: [
    @others
  ],
),
</t>
<t tx="swot.20221031115107.4">body: null,
</t>
<t tx="swot.20221031115310.2">IconButton(
  icon: Icon(Icons.search),
  onPressed: () {
    showSearch(
      // call search
      context: context,
      delegate: CustomSearchDelegate(),
    );
  },
),
</t>
<t tx="swot.20221031115636.1">class CustomSearchDelegate extends SearchDelegate {
  List&lt;String&gt; searchTerms = [
    'Apple',
    'Banana',
    'Pear',
    'Watermelons',
    'Oranges',
    'Blueberries',
    'Strawberries',
    'Raspberries',
  ];

  @override
  List&lt;Widget&gt;? buildActions(BuildContext context) {
    return [
      IconButton(
        onPressed: () {
          query = '';
        },
        icon: const Icon(Icons.clear),
      )
    ];
  }

  @override
  Widget? buildLeading(BuildContext context) {
    return IconButton(
      onPressed: () {
        close(context, null);
      },
      icon: const Icon(Icons.arrow_back),
    );
  }

  @override
  Widget buildResults(BuildContext context) {
    List&lt;String&gt; matchQuery = [];
    for (var fruit in searchTerms) {
      if (fruit.toLowerCase().contains(query.toLowerCase())) {
        matchQuery.add(fruit);
      }
    }
    return ListView.builder(
      itemCount: matchQuery.length,
      itemBuilder: (context, index) {
        var result = matchQuery[index];
        return ListTile(
          title: Text(result),
        );
      },
    );
  }

  @override
  Widget buildSuggestions(BuildContext context) {
    List&lt;String&gt; matchQuery = [];
    for (var fruit in searchTerms) {
      if (fruit.toLowerCase().contains(query.toLowerCase())) {
        matchQuery.add(fruit);
      }
    }
    return ListView.builder(
      itemCount: matchQuery.length,
      itemBuilder: (context, index) {
        var result = matchQuery[index];
        return ListTile(
          title: Text(result),
        );
      },
    );
  }
}

</t>
<t tx="swot.20221031122837.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
      // backgroundColor: Colors.orangeAccent,
      ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; SearchDelegateExample(),
      ),
    );
  },
  child: const Text('CustomSearchDelegate'),
),
</t>
<t tx="swot.20221031125101.1"></t>
<t tx="swot.20221031125115.1"></t>
<t tx="swot.20221031125205.1">很好的一篇实战文章 《Flutter之内置SearchDelegate -上》
https://mp.weixin.qq.com/s/eSVoyITisYYVqQI65agxxQ
</t>
<t tx="swot.20221031140355.1">SwitchListTile.adaptive(
  title: const Text('Switch List tile'),
  onChanged: (bool newValue) {},
  value: true,
),
</t>
<t tx="swot.20221110233138.2">@language dart
@tabwidth -2
class DropDownButtonExample extends StatefulWidget {
  const DropDownButtonExample({super.key});

  @override
  State&lt;DropDownButtonExample&gt; createState() =&gt; _DropDownButtonExampleState();
}

class _DropDownButtonExampleState extends State&lt;DropDownButtonExample&gt;{
  @others
}


@doc
https://www.flutterbeads.com/change-dropdown-color-in-flutter/
</t>
<t tx="swot.20221110233138.3">List&lt;String&gt; items = [
  'Python',
  'Dart',
  'Java',
];

String? selectedItem = 'Python';
</t>
<t tx="swot.20221110233138.6">@override
Widget build(BuildContext context) {
  return
  @others
  ;
}
</t>
<t tx="swot.20221110233541.2">DropdownButton(
  // hint: const Text("Filter by"),
  value: selectedItem,

  items: items.map((item) =&gt; DropdownMenuItem&lt;String&gt;(
    value: item,
    child: Text(item, style: const TextStyle(fontSize: 20)),
  )).toList(),

  onChanged: (item) {
    setState(() {
      selectedItem = item;
    });
  },
),
</t>
<t tx="swot.20221111000057.1">SizedBox(
  width: 240,
  child:
  @others
),
</t>
<t tx="swot.20221111000936.2">Column(
  mainAxisAlignment: MainAxisAlignment.center,
  children: [
    @others
  ],
)
</t>
<t tx="swot.20221111002547.1"></t>
<t tx="swot.20221112114354.1"></t>
<t tx="swot.20221112175512.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">TextFormField(
  @others
),
</t>
<t tx="swot.20221112175530.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">ElevatedButton(
  @others
  child: const Text('Validate'),
),
</t>
<t tx="swot.20221112180550.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">TextFormField(
  @others
),
</t>
<t tx="swot.20221112180604.1">const SizedBox(height: 10),
</t>
<t tx="swot.20221112180616.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">Card(
  child: Padding(
    padding: const EdgeInsets.all(8.0),
    child: Text(titles[index]),
  ),
),
</t>
<t tx="swot.20221112180710.1">List.generate(3, (int index) {
  return Padding(
    padding: const EdgeInsets.all(20.0),
    child: Column(
      mainAxisSize: MainAxisSize.min,
      children: [
        @others
      ],
    ),
  );
}),
</t>
<t tx="swot.20221112181907.1">validator: (value) {
  if (value == null || value.isEmpty) {
    return 'Enter something';
  }
  return null;
},
</t>
<t tx="swot.20221112182043.1">onPressed: () {
  if (_formKey.currentState!.validate()) {
    @others
  }
},
</t>
<t tx="swot.20221112182228.1">ScaffoldMessenger.of(context).showSnackBar(
  const SnackBar(
    content: Text('Great!'),
  ),
);
</t>
<t tx="swot.20221112182519.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">onSaved: (String? value) {
  if (value != null) {
    titles[index] = value;
    print('index: $index');  // will print all index: 0,1,2
  }
},
</t>
<t tx="swot.20221112184234.1" annotate="7d71002858080000007072696f7269747971014d0f27580a000000707269736574646174657102580a000000323032322d31312d31327103752e">// TextFormField changed then call onSaved()
onChanged: () {
  setState(() {
    Form.of(primaryFocus!.context!)!.save();
  });
},
</t>
<t tx="swot.20221112184709.1">child:
    @others
</t>
<t tx="swot.20221112203550.1"></t>
<t tx="swot.20221113174340.1">@language asciidoc
:nofooter:
https://www.flutterbeads.com/numeric-input-keyboard-in-flutter/

@language dart
import 'package:flutter/material.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

@language asciidoc
.TextField: number &amp; decimal
image:image/FlutterWidget/number.png[,200]
image:image/FlutterWidget/decimal.png[,200]

.TextField: phone &amp; done
image:image/FlutterWidget/phone.png[,200]
image:image/FlutterWidget/done.png[,200]

.TextField: number/decimal/done &amp; phone
image:image/FlutterWidget/number2.png[,200]
image:image/FlutterWidget/phone2.png[,200]
</t>
<t tx="swot.20221113174434.2">@language dart
@tabwidth -2
class TextFieldExample extends StatelessWidget {
  const TextFieldExample({ Key? key }) : super(key: key);
  @others
}
</t>
<t tx="swot.20221113174434.3">@override
Widget build(BuildContext context) {
  return
  @others
}
</t>
<t tx="swot.20221113180505.1">GestureDetector(
  onTap: () {
    FocusManager.instance.primaryFocus?.unfocus();
  },
  child:
  @others
);
</t>
<t tx="swot.20221113180641.1">Scaffold(
  @others
),
</t>
<t tx="swot.20221113180931.1">appBar: AppBar(
  centerTitle: true,
  title: Row(
    mainAxisAlignment: MainAxisAlignment.center,
    children: [
      // Image.asset(
        // 'assets/images/logo.png',
        // scale: 12,
      // ),
      // const SizedBox(
        // width: 10,
      // ),
      const Text(
        'FlutterBeads',
        style: TextStyle(color: Colors.black),
      ),
    ],
  ),
  backgroundColor: const Color(0xff6ae792),
),
</t>
<t tx="swot.20221113181008.1">@language dart
@tabwidth -2
body: Column(
  children: [
    @others
  ],
),
</t>
<t tx="swot.20221113181132.1">@language dart
@tabwidth -2
TextField(
  decoration: InputDecoration(labelText: 'Enter Number'),
  keyboardType: TextInputType.number,
  inputFormatters: [FilteringTextInputFormatter.digitsOnly],
),
</t>
<t tx="swot.20221113181152.1">@language dart
@tabwidth -2
TextField(
  decoration: InputDecoration(labelText: 'Enter Decimal value'),
  keyboardType: TextInputType.numberWithOptions(decimal: true),
  inputFormatters: [
    FilteringTextInputFormatter.allow(RegExp('[0-9.,]')),
  ],
),
</t>
<t tx="swot.20221113181202.1">@language dart
@tabwidth -2
TextField(
  decoration: InputDecoration(labelText: 'Enter phone number'),
  keyboardType: TextInputType.phone,
),
</t>
<t tx="swot.20221113181209.1">@language dart
@tabwidth -2
TextField(
  decoration: InputDecoration(labelText: 'Enter Number'),
  keyboardType: defaultTargetPlatform == TargetPlatform.iOS
      ? TextInputType.numberWithOptions(decimal: true, signed: true)
      : TextInputType.number,
  inputFormatters: [FilteringTextInputFormatter.digitsOnly],
),
</t>
<t tx="swot.20221113181739.2">ElevatedButton(
  style: ElevatedButton.styleFrom(
    // backgroundColor: Colors.orangeAccent,
  ),
  onPressed: () {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =&gt; TextFieldExample(),
      ),
    );
  },
  child: const Text('TextFieldExample'),
),
Divider(),
</t>
<t tx="swot.20221115221134.2">Container(
  margin: EdgeInsets.symmetric(vertical: 5.0),
  child:
  @others
)
</t>
<t tx="swot.20221115221203.1">Autocomplete&lt;String&gt;(
  optionsBuilder: (TextEditingValue textEditingValue) {
    // user input value
    if (textEditingValue.text == '') {
      return const Iterable&lt;String&gt;.empty();
    }
    return listItems.where((String item) {
      return item.contains(textEditingValue.text.toLowerCase());
    });
  },
  onSelected: (String item) {
    print('The $item was selected');
  },
),
</t>
<t tx="swot.20221118180810.2">Scaffold(
  @others
);
</t>
<t tx="swot.20221118180810.3">appBar: AppBar(
  title: Text('DropDownButton'),
  // leading: Icon(Icons.menu),
  elevation: 0.0,
  centerTitle: true,
  actions: [
    Icon(Icons.settings),
  ],
),
</t>
<t tx="swot.20221118180810.4">body:
@others
</t>
<t tx="swot.20221118181453.2">Center(
  child:
  @others
)
</t>
<t tx="swot.20221118181746.1">@doc
To change the dropdown Button color in Flutter, simply wrap your DropdownButton widget inside the Container and provide the styling instructions inside the decoration property using the BoxDecoration widget. Using the color property (insideBoxDecoration) you can assign the color.
</t>
<t tx="swot.20221118181835.1">DropdownButton(
  // hint: const Text("Filter by"),
  value: selectedItem,

  items: items.map((item) =&gt; DropdownMenuItem&lt;String&gt;(
    value: item,
    child: Text(item, style: const TextStyle(fontSize: 20)),
  )).toList(),

  onChanged: (item) {
    setState(() {
      selectedItem = item;
    });
  },
),
</t>
<t tx="swot.20221118181936.2">Container(
  padding: const EdgeInsets.all(8),
  decoration: const BoxDecoration(
    color: Colors.greenAccent,
  ),
  child:
  @others
),
</t>
<t tx="swot.20221118182834.1">@doc
To change dropdown arrow color in Flutter, you can add the same arrow icon inside the icon property and change the color using the color property.
</t>
<t tx="swot.20221118183034.2">DropdownButton(
  @others
  // hint: const Text("Filter by"),
  value: selectedItem,

  items: items.map((item) =&gt; DropdownMenuItem&lt;String&gt;(
    value: item,
    child: Text(item, style: const TextStyle(fontSize: 20)),
  )).toList(),

  onChanged: (item) {
    setState(() {
      selectedItem = item;
    });
  },
),
</t>
<t tx="swot.20221118183205.1">icon: const Icon(
  Icons.arrow_drop_down,
  color: Colors.red,
),
</t>
<t tx="swot.20221118183336.1">const SizedBox(
  height: 20.0,
),
</t>
<t tx="swot.20221118183443.1">@doc
To change the dropdown menu item background color, you can use the `dropdownColor` property and assign the color of your choice.
</t>
<t tx="swot.20221118183642.1">DropdownButton(
  @others
  // hint: const Text("Filter by"),
  value: selectedItem,

  items: items.map((item) =&gt; DropdownMenuItem&lt;String&gt;(
    value: item,
    child: Text(item, style: const TextStyle(fontSize: 20)),
  )).toList(),

  onChanged: (item) {
    setState(() {
      selectedItem = item;
    });
  },
),
</t>
<t tx="swot.20221118183705.1">dropdownColor: Colors.amberAccent,
</t>
<t tx="swot.20221118183819.1">const SizedBox(
  height: 20.0,
),
</t>
<t tx="swot.20221118184332.1">@doc
To change the dropdown menu text color, use the style property and assign the `TextStyle` widget with the parameter called color.
</t>
<t tx="swot.20221118184337.1">const SizedBox(
  height: 20.0,
),
</t>
<t tx="swot.20221118184426.1">DropdownButton(
  @others
  // hint: const Text("Filter by"),
  value: selectedItem,

  items: items.map((item) =&gt; DropdownMenuItem&lt;String&gt;(
    value: item,
    child: Text(item, style: const TextStyle(fontSize: 20)),
  )).toList(),

  onChanged: (item) {
    setState(() {
      selectedItem = item;
    });
  },
),
</t>
<t tx="swot.20221118191553.1">style: const TextStyle(
  color: Colors.deepPurple,
  fontSize: 25,
  fontWeight: FontWeight.bold,
),
</t>
<t tx="swot.20221118191949.1">const SizedBox(
  height: 20.0,
),
</t>
<t tx="swot.20221118192210.1">@doc
To change underline color use the underline property of the Dropdown widget and then assign the Container widget with height and color property.
</t>
<t tx="swot.20221118192421.1">@doc
To change the color of the selected text inside the dropdown button in Flutter, you can make use of the selectedItemBuilder and create a new widget that shows when the item is selected. The idea is to pass the same Text with a different color.
</t>
<t tx="swot.20221118192427.1">const SizedBox(
  height: 20.0,
),
</t>
<t tx="swot.20221118192452.1">DropdownButton(
  @others
  // hint: const Text("Filter by"),
  value: selectedItem,

  items: items.map((item) =&gt; DropdownMenuItem&lt;String&gt;(
    value: item,
    child: Text(item, style: const TextStyle(fontSize: 20)),
  )).toList(),

  onChanged: (item) {
    setState(() {
      selectedItem = item;
    });
  },
),
</t>
<t tx="swot.20221118192536.1">underline: Container(
  height: 3,
  color: Colors.deepPurpleAccent,
),
</t>
<t tx="swot.20221118192811.1">const SizedBox(
  height: 20.0,
),
</t>
<t tx="swot.20221118192831.1">SizedBox(
  width: 240,
  child:
  @others
),
</t>
<t tx="swot.20221118192831.2">DropdownButtonFormField(
  // decoration: InputDecoration(
    // enabledBorder: OutlineInputBorder(
      // borderRadius: BorderRadius.circular(12),
      // borderSide: const BorderSide(width: 3, color: Colors.blue)
    // )
  // ),
  // hint: const Text("Filter by"),
  value: selectedItem,

  items: items.map((item) =&gt; DropdownMenuItem&lt;String&gt;(
    value: item,
    child: Text(item, style: const TextStyle(fontSize: 20)),
  )).toList(),

  onChanged: (item) {
    setState(() {
      selectedItem = item;
    });
  },
),
</t>
<t tx="swot.20221118193132.1">DropdownButton(
  @others
  // hint: const Text("Filter by"),
  value: selectedItem,

  items: items.map((item) =&gt; DropdownMenuItem&lt;String&gt;(
    value: item,
    child: Text(item, style: const TextStyle(fontSize: 20)),
  )).toList(),

  onChanged: (item) {
    setState(() {
      selectedItem = item;
    });
  },
),
</t>
<t tx="swot.20221118193317.1">selectedItemBuilder: (BuildContext context) {
  return items.map((value) {
    return Text(
      selectedItem!,
      style: const TextStyle(color: Colors.red, fontSize: 30),
    );
  }).toList();
},
</t>
</tnodes>
</leo_file>
